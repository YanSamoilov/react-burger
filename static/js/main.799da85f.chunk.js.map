{"version":3,"sources":["components/ModalOverlay/ModalOverlay.module.css","components/ConstructorIngredient/ConstructorIngredient.module.css","components/Header/Header.module.css","services/types/hooks.ts","utils/constants.ts","utils/cookie.ts","utils/api.ts","services/constants/userAuth.ts","services/actions/userAuth.ts","pages/Login/Login.tsx","components/Preloader/Preloader.tsx","pages/Register/Register.tsx","pages/ForgotPassword/ForgotPassword.tsx","pages/ResetPassword/ResetPassword.tsx","components/Header/Header.tsx","services/constants/burgerConstructor.ts","services/actions/burgerConstructor.ts","components/ProfileNav/ProfileNav.tsx","pages/Profile/Profile.tsx","components/FullTab/FullTab.tsx","components/Ingridient/Ingredient.tsx","components/IngredientDetails/IngredientDetails.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","services/constants/ingredientDetails.ts","components/BurgerIngredients/BurgerIngredients.tsx","services/actions/ingredientDetails.ts","images/done.svg","components/OrderDetails/OrderDetails.tsx","components/ConstructorIngredient/ConstructorIngredient.tsx","services/constants/orderDetails.ts","services/actions/orderDetails.ts","components/BurgerConstructor/BurgerConstructor.tsx","pages/NotFound404/NotFound404.tsx","services/constants/burgerIngredients.ts","services/actions/burgerIngredients.ts","components/ProtectedRoute/ProtectedRoute.tsx","pages/IngredientDetailsPage/IngredientDetailsPage.tsx","services/constants/wsConstants.ts","services/actions/wsActions.ts","utils/dateOrderFeedPage.ts","components/OrderDescription/OrderDescription.tsx","components/OrderFeed/OrderFeed.tsx","components/OrdersList/OrdersList.tsx","pages/Feed/Feed.tsx","pages/OrderDescriptionPage/OrderDescriptionPage.tsx","components/ProfileOrders/ProfileOrders.tsx","components/App/App.tsx","services/reducers/burgerIngredients.tsx","services/reducers/ingredientDetails.tsx","services/reducers/burgerConstructor.tsx","services/reducers/orderDetails.tsx","services/reducers/userAuth.tsx","services/reducers/wsReducer.ts","services/reducers/index.ts","services/wsMiddleware/socketMiddleware.ts","utils/store.ts","index.tsx","components/OrderDescription/OrderDescription.module.css","components/OrderFeed/OrderFeed.module.css","pages/Feed/Feed.module.css","components/ProfileNav/ProfileNav.module.css","components/BurgerConstructor/BurgerConstructor.module.css","pages/IngredientDetailsPage/IngredientDetailsPage.module.css","components/Preloader/Preloader.module.css","components/IngredientDetails/IngredientDetails.module.css","pages/Profile/Profile.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/OrderDetails/OrderDetails.module.css","pages/Login/Login.module.css","pages/Register/Register.module.css","pages/ForgotPassword/ForgotPassword.module.css","pages/ResetPassword/ResetPassword.module.css","pages/NotFound404/NotFound404.module.css","components/Modal/Modal.module.css","components/OrdersList/OrdersList.module.css","components/ProfileOrders/ProfileOrders.module.css","components/App/App.module.css","components/Ingridient/Ingredient.module.css","pages/OrderDescriptionPage/OrderDescriptionPage.module.css"],"names":["module","exports","useAppSelector","useSelector","useAppDispatch","useDispatch","BASE_URL","modalContainer","document","querySelector","wsUrl","getCookie","name","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","setTokenInCookie","resource","tokenName","authToken","accessToken","indexOf","split","refreshToken","checkResponse","res","ok","json","Promise","reject","status","getIngredientsData","a","fetch","response","postOrder","arrayId","method","headers","authorization","body","JSON","stringify","ingredients","postAuthUser","userData","postRegisterUser","getPermissionChangePassword","email","postNewPassword","newPassword","password","token","postLogOut","getNewAccessToken","getUserData","patchNewUserData","GET_SERVER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","AUTH_USER_SUCCESS","AUTH_USER_FAILED","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILED","CHANGE_USER_SUCCESS","CHANGE_USER_FAILED","POST_EMAIL_FORGOT_PAGE_SUCCESS","POST_EMAIL_FORGOT_PAGE_FAILED","POST_NEW_PASSWORD_SUCCESS","POST_NEW_PASSWORD_FAILED","GET_SERVER_REQUEST_RESET","getServerRequest","type","changeUserSuccess","changeUserResultMessage","changeUserFailed","changeUserErrorMessage","authUserSuccess","authUserFailed","authErrorMessage","getServerRequestReset","postNewPasswordAction","dispatch","then","catch","error","postNewpasswordErrorMessage","postEmailFromForgotPage","postEmailForgotPageErrorMessage","registerUser","user","registerErrorMessage","logoutUser","logoutErrorMessage","Login","location","useLocation","state","authUserReducer","isAuth","useState","setEmail","setPassword","to","from","className","LoginStyles","login","noValidate","login__form","onSubmit","e","preventDefault","login__heading","onChange","target","size","disabled","login__link","login__error","Preloader","PreloaderStyle","Register","isLoadingAuth","setValue","RegisterStyles","register","action","register__form","register__heading","placeholder","register__link","register__error","ForgotPassword","history","useHistory","isEmail","useEffect","push","ForgotPasswordStyles","ResetPassword","postNewPasswordError","ResetPasswordStyles","icon","AppHeader","pathname","typeProfileIcon","typeBurgerIcon","typeListIcon","stylesHeader","header","header__nav","exact","activeClassName","header__logo","ADD_INGREDIENT_INSIDE_CONSTRUCTOR","REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR","TOGGLE_BUN_INSIDE_CONSTRUCTOR","CHANGE_INGREDIENT_POSITION","CLEAR_CONSTRUCTOR","clearConstructor","ProfileNav","ProfileNavStyles","profile__list","onClick","Profile","setLogin","inputName","setInputName","ProfileStyles","profile","message","FullTab","bunHeadingRef","sauceHeadingRef","mainIngredientHeadingRef","current","setCurrent","style","display","active","scrollIntoView","Ingredient","image","price","id","ingredientsInsideConstructor","burgerConstructor","constructorElem","count","useMemo","reduce","acc","el","_id","useDrag","item","collect","monitor","opacity","isDragging","dragRef","ref","src","alt","IngStyles","IngredientDetails","ingredient","IngredientDetailsStyles","ingredientDetails","image_large","ingredientDetails__image","ingredientDetails__name","ingredientDetails__list","calories","proteins","fat","carbohydrates","ModalOverlay","children","overlayRef","ModalOverlayStyles","modalOverlay","Modal","handleCloseModal","useRef","handleCloseEsc","evt","key","addEventListener","removeEventListener","handleCloseOverlay","ReactDOM","createPortal","ModalStyle","modal","modal_open","modal__content","ADD_INGREDIENT_DETAILS","REMOVE_INGREDIENT_DETAILS","BurgerIngredients","ingredientsData","feedIngredients","bunIngredient","filter","product","sauceIngredient","mainIngredient","handleOpenIngredient","selectIngredientId","selectedIngredient","find","ingr","addIngredientDetails","renderIngredient","onClickCapture","BurgerIngrStyles","background","handleScroll","useCallback","mainBlockTopCoordinate","getBoundingClientRect","top","getCoordinates","bunHeaderCoordinates","Math","abs","sauceHeaderCoordinates","mainIngredientCoordinates","onScroll","map","removeIngredientDetails","OrderDetails","orderNum","errorOrderNum","OrderDetailsStyles","orderDetails","orderDetails__heading","orderDetails__text","done","orderDetails__image","ConstructorIngredient","uid","useDrop","accept","hover","dragUid","hoverUid","dropRef","handleDeleteIngredient","removeIngredientInsideConstructor","ConstructorIngredientStyles","isLocked","text","thumbnail","handleClose","POST_ORDER_SUCCESS","POST_ORDER_FAILED","HANDLE_CLOSE_ORDER_MODAL","POST_ORDER_REQUEST","ADD_CURRENT_ORDER_DETAILS","REMOVE_CURRENT_ORDER_DETAILS","removeCurrentOrderDetails","getOrderDetails","idsArray","order","number","postOrderFailed","BurgerConstructor","errorMessage","allIngredientsData","isLoading","constructorItems","isHover","isOver","drop","addItem","dropTarget","bun","mainIngridient","totalPrice","elem","dropedIngredient","addIngredientInsideConstructor","uuidv4","createBunIngredient","side","BurgConstructorStyles","constructorBorder","onHover","totalIds","length","NotFound404","styles404","notFound","notFound__text","notFound__link","GET_FEED_REQUEST","GET_FEED_SUCCESS","GET_FEED_FAILED","getIngredients","feed","data","getFeedFailed","ProtectedRoute","redirectPath","render","IngredientDetailsPage","useParams","IngredientPageStyles","ingredientDetailsPage","ingredientDetailsPage__name","ingredientDetailsPage__image","ingredientDetailsPage__list","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_GET_MESSAGE","WS_CONNECTION_CLOSED","wsConnectionSuccess","wsConnectionError","wsGetMessage","payload","wsConnectionClosed","actionListWithoutAuth","wsConnectionStart","wsConnectionStartClosed","actionListWithAuth","wsConnectionStartWithAuth","convertDate","dateOrder","time","parse","toString","dayOrder","dateNow","dateNowInMillis","millisPassedToday","getHours","getMinutes","getSeconds","dateOrderInMillis","countDaysAgo","ceil","slice","OrderDescription","orderData","ingredientsFromOrder","n","styles","orderDscr","orderDscr__number","orderDscr__status","allIngredientsCards","ingredientData","createIngredientElement","renderIngredientElement","orderDscr__date","createdAt","OrderFeed","zIndex","fullDataOrderIngredientPreliminary","fullDataOrderIngredient","createImage","stylesOrderFeed","arr","ind","renderImagesIngredients","OrdersList","allOrders","path","handleOpenOrderDetails","stylesOrdersList","Feed","wsReducer","orders","wsConnected","total","totalToday","currentOrderDetails","allOrdersDoneStatus","allOrdersPensingStatus","stylesFeed","main__error","OrderDescriptionPage","idFromProtectedPage","pop","currentOrderData","order__error","ProfileOrders","Styles","reverse","App","historyAction","accessTokenCurrent","getUserDataAction","AppStyles","main","DndProvider","backend","HTML5Backend","ingredientsInitialState","ingredientDetailsInitialState","burgerConstructorInitialState","orderDetailsInitialState","userAuthState","feedInitialState","rootReducer","combineReducers","socketMiddleware","actionsList","authType","store","socket","next","WebSocket","onopen","event","readyState","onerror","onmessage","onclose","close","enhancer","window","compose","applyMiddleware","thunk","createStore","basename"],"mappings":"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","file":"static/js/main.799da85f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"ModalOverlay_modalOverlay__PKNjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor__element\":\"ConstructorIngredient_burger-constructor__element__Q-sl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__jn53E\",\"header__logo\":\"Header_header__logo__3T1zS\",\"header__nav\":\"Header_header__nav__39_4w\",\"header__nav-list\":\"Header_header__nav-list__1niLD\",\"header__nav-link\":\"Header_header__nav-link__3FQ8c\",\"header__nav-link_active\":\"Header_header__nav-link_active__idzma\",\"header__nav-link_right\":\"Header_header__nav-link_right__NMeru\"};","import { store } from 'utils/store';\r\nimport { useSelector, useDispatch, TypedUseSelectorHook } from 'react-redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { Action, ActionCreator } from 'redux';\r\nimport { TBurgerIngredientsActions } from \"services/actions/burgerIngredients\";\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk<TReturn = void> = ActionCreator<\r\n  ThunkAction<TReturn, Action, RootState, TBurgerIngredientsActions>\r\n>;\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch & AppThunk>()\r\n","export const BASE_URL = 'https://norma.nomoreparties.space/api/';\r\nexport const modalContainer = document.querySelector('#modal_container') as HTMLElement;\r\nexport const wsUrl = `wss://norma.nomoreparties.space/orders`;\r\n","import { IServerReply } from \"services/types/data\";\r\n\r\nexport function getCookie(name: string) {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nfunction setCookie(name: string, value: string, props?: any) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, '', { expires: -1 });\r\n}\r\n\r\n\r\nexport function setTokenInCookie(resource: IServerReply, tokenName: string) {\r\n  let authToken;\r\n  if(tokenName === 'accessToken') {\r\n      if (resource.accessToken.indexOf('Bearer') === 0) {\r\n        authToken = resource.accessToken.split('Bearer ')[1];\r\n      }\r\n      if (authToken) {\r\n        setCookie(tokenName, authToken, {expires:1200});\r\n      }\r\n  }\r\n  else {\r\n    authToken = resource.refreshToken;\r\n    if(authToken)\r\n      setCookie(tokenName, authToken);\r\n  }\r\n}\r\n","import { BASE_URL } from './constants';\r\nimport { getCookie } from './cookie';\r\n\r\nconst checkResponse = (res: Response) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(res.status);\r\n};\r\n\r\nexport const getIngredientsData = async (): Promise<any> => {\r\n  const response = await fetch(`${BASE_URL}ingredients`);\r\n  return checkResponse(response);\r\n};\r\n\r\nexport const postOrder = async (arrayId: ReadonlyArray<string>, accessToken: any): Promise<any> => {\r\n  const response = await fetch(`${BASE_URL}orders`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: \"Bearer \" + accessToken\r\n    },\r\n    body: JSON.stringify({\r\n      ingredients: arrayId\r\n    })\r\n  })\r\n  return checkResponse(response);\r\n};\r\n\r\n//Авторизация пользователя.\r\nexport const postAuthUser = async (userData: { email: string, password: string }): Promise<any> => {\r\n\r\n  const response = await fetch(`${BASE_URL}auth/login`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(userData)\r\n  })\r\n  return checkResponse(response);\r\n}\r\n\r\n//Регистрация пользователя.\r\nexport const postRegisterUser = async (userData: { email: string, password: string, name: string }): Promise<any> => {\r\n\r\n  const response = await fetch(`${BASE_URL}auth/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(userData)\r\n  })\r\n  return checkResponse(response);\r\n}\r\n\r\n//Запрос для разрешения смены пароля, отправка почты.\r\nexport const getPermissionChangePassword = async (email: string): Promise<any> => {\r\n  const response = await fetch(`${BASE_URL}password-reset`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      \"email\": email\r\n    })\r\n  })\r\n  return checkResponse(response);\r\n}\r\n\r\n//Запрос на смену пароля. Отправка нового пароля.\r\nexport const postNewPassword = async (newPassword: { password: string, token: string }): Promise<any> => {\r\n  const response = await fetch(`${BASE_URL}password-reset/reset`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      'password': newPassword.password,\r\n      'token': newPassword.token\r\n    })\r\n  })\r\n  return checkResponse(response);\r\n}\r\n\r\n//Запрос на выход из системы.\r\nexport const postLogOut = async () => {\r\n  const refreshToken = getCookie('refreshToken');\r\n  const response = await fetch(`${BASE_URL}auth/logout`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      \"token\": refreshToken\r\n    })\r\n  })\r\n  return checkResponse(response);\r\n}\r\n\r\n//Запрос на обновление accessToken.\r\nexport const getNewAccessToken = async (refreshToken: string) => {\r\n  const response = await fetch(`${BASE_URL}auth/token`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      token: refreshToken\r\n    })\r\n  })\r\n  return checkResponse(response);\r\n}\r\n\r\n//Запрос данных о пользователе.\r\nexport const getUserData = async (accessToken: string) => {\r\n  const response = await fetch(`${BASE_URL}auth/user`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: \"Bearer \" + accessToken,\r\n    }\r\n  })\r\n  return checkResponse(response);\r\n}\r\n\r\nexport const patchNewUserData = async (userData: { email: string, password: string, name: string }, accessToken: string): Promise<any> => {\r\n\r\n  const response = await fetch(`${BASE_URL}auth/user`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: \"Bearer \" + accessToken,\r\n    },\r\n    body: JSON.stringify(userData)\r\n  })\r\n  return checkResponse(response);\r\n}\r\n","export const GET_SERVER_REQUEST: 'GET_SERVER_REQUEST' = 'GET_SERVER_REQUEST';\r\nexport const REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS' = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED: 'REGISTER_USER_FAILED' = 'REGISTER_USER_FAILED';\r\nexport const AUTH_USER_SUCCESS: 'AUTH_USER_SUCCESS' = 'AUTH_USER_SUCCESS';\r\nexport const AUTH_USER_FAILED: 'AUTH_USER_FAILED' = 'AUTH_USER_FAILED';\r\nexport const LOGOUT_USER_SUCCESS: 'LOGOUT_USER_SUCCESS' = 'LOGOUT_USER_SUCCESS';\r\nexport const LOGOUT_USER_FAILED: 'LOGOUT_USER_FAILED' = 'LOGOUT_USER_FAILED';\r\nexport const CHANGE_USER_SUCCESS: 'CHANGE_USER_SUCCESS' = 'CHANGE_USER_SUCCESS';\r\nexport const CHANGE_USER_FAILED: 'CHANGE_USER_FAILED' = 'CHANGE_USER_FAILED';\r\nexport const POST_EMAIL_FORGOT_PAGE_SUCCESS: 'POST_EMAIL_FORGOT_PAGE_SUCCESS' = 'POST_EMAIL_FORGOT_PAGE_SUCCESS';\r\nexport const POST_EMAIL_FORGOT_PAGE_FAILED: 'POST_EMAIL_FORGOT_PAGE_FAILED' = 'POST_EMAIL_FORGOT_PAGE_FAILED';\r\nexport const POST_NEW_PASSWORD_SUCCESS: 'POST_NEW_PASSWORD_SUCCESS' = 'POST_NEW_PASSWORD_SUCCESS';\r\nexport const POST_NEW_PASSWORD_FAILED: 'POST_NEW_PASSWORD_FAILED' = 'POST_NEW_PASSWORD_FAILED';\r\nexport const GET_SERVER_REQUEST_RESET: 'GET_SERVER_REQUEST_RESET' = 'GET_SERVER_REQUEST_RESET';\r\n","import { Action, ActionCreator } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { RootState } from 'services/types/hooks';\nimport { postRegisterUser, postAuthUser, postLogOut, patchNewUserData, getNewAccessToken, getPermissionChangePassword, postNewPassword, getUserData } from 'utils/api';\nimport { setTokenInCookie, getCookie, deleteCookie } from 'utils/cookie';\nimport {\n  GET_SERVER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n  AUTH_USER_SUCCESS,\n  AUTH_USER_FAILED,\n  LOGOUT_USER_SUCCESS,\n  LOGOUT_USER_FAILED,\n  CHANGE_USER_SUCCESS,\n  CHANGE_USER_FAILED,\n  POST_EMAIL_FORGOT_PAGE_SUCCESS,\n  POST_EMAIL_FORGOT_PAGE_FAILED,\n  POST_NEW_PASSWORD_SUCCESS,\n  POST_NEW_PASSWORD_FAILED,\n  GET_SERVER_REQUEST_RESET\n} from 'services/constants/userAuth';\nimport {\n  IServerRequest,\n  IRegisterUserSuccess,\n  IRegisterUserFailed,\n  IAuthUserSuccess,\n  IAuthUserFailed,\n  ILogOutSuccess,\n  ILogOutFailed,\n  IChangeUserSuccess,\n  IChangeUserFailed,\n  IPostEmailForgotPageSuccess,\n  IPostEmailForgotPageFailed,\n  IPostNewPasswordSuccess,\n  IPostNewPasswordFailed,\n  IServerRequestReset\n} from 'services/types/data';\n\nexport type TUserData =\n  | IServerRequest\n  | IRegisterUserSuccess\n  | IRegisterUserFailed\n  | IAuthUserSuccess\n  | IAuthUserFailed\n  | ILogOutSuccess\n  | ILogOutFailed\n  | IChangeUserSuccess\n  | IChangeUserFailed\n  | IPostEmailForgotPageSuccess\n  | IPostEmailForgotPageFailed\n  | IPostNewPasswordSuccess\n  | IPostNewPasswordFailed\n  | IServerRequestReset\n\nexport type AppThunk<TReturn = void> = ActionCreator<\n  ThunkAction<TReturn, Action, RootState, TUserData>\n>;\n\nexport const getServerRequest = (): IServerRequest => ({\n  type: GET_SERVER_REQUEST\n});\n\nexport const postNewPasswordSuccess = (): IPostNewPasswordSuccess => ({\n  type: POST_NEW_PASSWORD_SUCCESS\n});\n\nexport const postNewPasswordFailed = (postNewpasswordErrorMessage: string): IPostNewPasswordFailed => ({\n  type: POST_NEW_PASSWORD_FAILED,\n  postNewpasswordErrorMessage\n});\n\nexport const postEmailForgotPageSuccess = (): IPostEmailForgotPageSuccess => ({\n  type: POST_EMAIL_FORGOT_PAGE_SUCCESS\n});\n\nexport const postEmailForgotPageFailed = (postEmailForgotPageErrorMessage: string): IPostEmailForgotPageFailed => ({\n  type: POST_EMAIL_FORGOT_PAGE_FAILED,\n  postEmailForgotPageErrorMessage\n});\n\nexport const registerUserSuccess = (): IRegisterUserSuccess => ({\n  type: REGISTER_USER_SUCCESS,\n});\n\nexport const registerUserFailed = (registerErrorMessage: string): IRegisterUserFailed => ({\n  type: REGISTER_USER_FAILED,\n  registerErrorMessage\n});\n\nexport const changeUserSuccess = (email: string, name: string, changeUserResultMessage: string): IChangeUserSuccess => ({\n  type: CHANGE_USER_SUCCESS,\n  email,\n  name,\n  changeUserResultMessage\n});\n\nexport const changeUserFailed = (changeUserErrorMessage: string): IChangeUserFailed => ({\n  type: CHANGE_USER_FAILED,\n  changeUserErrorMessage\n});\n\nexport const authUserSuccess = (email: string, name: string): IAuthUserSuccess => ({\n  type: AUTH_USER_SUCCESS,\n  email,\n  name\n})\n\nexport const authUserFailed = (authErrorMessage: string): IAuthUserFailed => ({\n  type: AUTH_USER_FAILED,\n  authErrorMessage\n});\n\nexport const logOutSuccess = (): ILogOutSuccess => ({\n  type: LOGOUT_USER_SUCCESS,\n});\n\nexport const logOutFailed = (logoutErrorMessage: string): ILogOutFailed => ({\n  type: LOGOUT_USER_FAILED,\n  logoutErrorMessage\n});\n\nexport const getServerRequestReset = (): IServerRequestReset => ({\n  type: GET_SERVER_REQUEST_RESET\n})\n\n//Отправка нового пароля на сервер.\nexport const postNewPasswordAction: AppThunk = (password: string, value: string) => {\n  return function (dispatch) {\n    dispatch(getServerRequest());\n    postNewPassword({ password: password, token: value })\n      .then((res) => {\n        dispatch(postNewPasswordSuccess());\n      })\n      .catch((error) => {\n        dispatch(postNewPasswordFailed(error));\n      })\n  }\n}\n\n//Отправка почты для получения ключа для смены пароля.\nexport const postEmailFromForgotPage: AppThunk = (email: string) => {\n  return function (dispatch) {\n    dispatch(getServerRequest());\n\n    getPermissionChangePassword(email)\n      .then((res) => {\n        dispatch(postEmailForgotPageSuccess());\n      })\n      .catch((error) => {\n        dispatch(postEmailForgotPageFailed(error));\n      })\n  }\n}\n\n//Отправка данных для регистрации.\nexport const registerUser: AppThunk = (user: { email: string, password: string, name: string }) => {\n  return function (dispatch) {\n    dispatch(getServerRequest());\n\n    postRegisterUser(user)\n      .then((res) => {\n        setTokenInCookie(res, 'accessToken');\n        setTokenInCookie(res, 'refreshToken');\n        dispatch(registerUserSuccess());\n      })\n      .catch((error) => {\n        dispatch(registerUserFailed(error))\n      })\n  }\n}\n\n//Отправка новых данных пользователя.\nexport const patchNewUserDataAction: AppThunk = (user: { email: string, password: string, name: string }) => {\n  return function (dispatch) {\n    dispatch(getServerRequest())\n\n    let refreshToken = getCookie('refreshToken');\n    let accessToken = getCookie('accessToken');\n\n    if (accessToken) {\n      patchNewUserData(user, accessToken)\n        .then((res) => {\n          dispatch(changeUserSuccess(\n            res.user.email,\n            res.user.name,\n            'Данные успешно изменены'\n          ));\n        })\n        .catch((error) => {\n          dispatch(changeUserFailed(error))\n        });\n    }\n    else if (refreshToken) {\n      getNewAccessToken(refreshToken)\n        .then((res) => {\n          setTokenInCookie(res, 'accessToken');\n          setTokenInCookie(res, 'refreshToken');\n          accessToken = getCookie('accessToken');\n          if (accessToken) {\n            patchNewUserData(user, accessToken)\n              .then((res) => {\n                dispatch(changeUserSuccess(\n                  res.user.email,\n                  res.user.name,\n                  'Данные успешно изменены'\n                ));\n              })\n              .catch((error) => {\n                dispatch(dispatch(changeUserFailed(error)));\n              })\n          }\n        })\n        .catch((error) => {\n          return error.message\n        })\n    }\n  }\n}\n\n//Авторизация пользователя.\nexport const authUser: AppThunk = (user: { email: string, password: string }) => {\n  return function (dispatch) {\n    dispatch(getServerRequest())\n\n    postAuthUser(user)\n      .then((res) => {\n        setTokenInCookie(res, 'accessToken');\n        setTokenInCookie(res, 'refreshToken');\n\n        dispatch(authUserSuccess(\n          res.user.email,\n          res.user.name\n        ));\n      })\n      .catch((error) => {\n        dispatch(authUserFailed(error));\n      })\n  }\n}\n\n//Выход пользователя из приложения.\nexport const logoutUser: AppThunk = () => {\n  return function (dispatch) {\n    dispatch(getServerRequest())\n\n    postLogOut()\n      .then(() => {\n        deleteCookie('accessToken');\n        deleteCookie('refreshToken');\n        dispatch(logOutSuccess());\n      })\n      .catch((error) => {\n        dispatch(logOutFailed(error));\n      })\n  }\n}\n\n//Получение данных о пользователе.\nexport const getUserDataAction: AppThunk = (path) => {\n  const accessTokenCurrent = getCookie('accessToken');\n  if (!accessTokenCurrent) {\n    return function (dispatch) {\n      dispatch(getServerRequest())\n      let refreshToken = getCookie('refreshToken');\n      if (!refreshToken) {\n        dispatch(getServerRequestReset());\n        return\n      }\n      getNewAccessToken(refreshToken)\n        .then((res) => {\n\n          setTokenInCookie(res, 'accessToken');\n          setTokenInCookie(res, 'refreshToken');\n          const accessToken = getCookie('accessToken');\n\n          if (accessToken) {\n            getUserData(accessToken)\n              .then((res) => {\n                dispatch(authUserSuccess(\n                  res.user.email,\n                  res.user.name\n                ));\n              })\n              .catch((error) => {\n                dispatch(authUserFailed(error))\n              })\n          }\n        })\n        .catch(() => {\n          dispatch(getServerRequestReset());\n        })\n    }\n  }\n  else {\n    return function (dispatch) {\n      if (accessTokenCurrent) {\n        getUserData(accessTokenCurrent)\n          .then((res) => {\n            dispatch(authUserSuccess(\n              res.user.email,\n              res.user.name\n            ));\n          })\n          .catch((error) => {\n            dispatch(authUserFailed(error))\n          })\n      }\n    }\n\n  }\n}\n","import { useState } from 'react';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { EmailInput, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useAppDispatch } from 'services/types/hooks';\r\nimport { authUser } from 'services/actions/userAuth';\r\nimport { useAppSelector } from 'services/types/hooks';\r\nimport LoginStyles from './Login.module.css';\r\n\r\nfunction Login() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation<any>();\r\n  const { isAuth, authErrorMessage } = useAppSelector(state => state.authUserReducer);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value)\r\n  };\r\n\r\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.target.value)\r\n  };\r\n\r\n  const postLogin = (e: React.SyntheticEvent<Element, Event>) => {\r\n    e.preventDefault();\r\n\r\n    if (email && password) {\r\n      dispatch(authUser({ email: email, password: password }));\r\n    }\r\n  };\r\n\r\n  if (isAuth) {\r\n    return (\r\n      <Redirect to={location.state?.from || '/'} />\r\n    )\r\n  }\r\n  return (\r\n    <section className={`${LoginStyles.login}`}>\r\n      <form method=\"POST\" name=\"login\" noValidate className={`${LoginStyles.login__form}`} onSubmit={postLogin}>\r\n        <h1 className={`${LoginStyles.login__heading} text text_type_main-medium`}>Вход</h1>\r\n        <EmailInput onChange={onChangeEmail} value={email} name={'email'} size='default' />\r\n        <PasswordInput onChange={onChangePassword} value={password} name={'password'} size='default' />\r\n        <Button disabled={email === '' && password === ''} type=\"primary\" size=\"large\">Войти</Button>\r\n      </form>\r\n      <p className='text text_type_main-default text_color_inactive mt-20 mb-4'>\r\n        Вы - новый пользователь?\r\n        <Link to={'/register'} className={`${LoginStyles.login__link} ml-2`}>Зарегистрироваться</Link>\r\n      </p>\r\n      <p className='text text_type_main-default text_color_inactive'>\r\n        Забыли пароль?\r\n        <Link to={'/forgot-password'} className={`${LoginStyles.login__link} ml-2`}>Восстановить пароль</Link>\r\n      </p>\r\n      <p className={`${LoginStyles.login__error} text text_type_main-default mt-4`}>{authErrorMessage}</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import PreloaderStyle from './Preloader.module.css';\r\n\r\nexport default function Preloader() {\r\n  return (\r\n    <div className={`${PreloaderStyle['preloader__container']}`}>\r\n      <div className={`${PreloaderStyle['preloader']}`}>\r\n        <div className={`${PreloaderStyle['preloader__elem']} ${PreloaderStyle['preloader__elem_one']}`}></div>\r\n        <div className={`${PreloaderStyle['preloader__elem']} ${PreloaderStyle['preloader__elem_two']}`}></div>\r\n        <div className={`${PreloaderStyle['preloader__elem']} ${PreloaderStyle['preloader__elem_three']}`}></div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import { useState } from 'react';\r\nimport { Input, EmailInput, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from 'services/types/hooks';\r\nimport { registerUser } from 'services/actions/userAuth';\r\nimport RegisterStyles from './Register.module.css';\r\nimport Preloader from 'components/Preloader/Preloader';\r\n\r\nfunction Register() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { isLoadingAuth, registerErrorMessage } = useAppSelector(state => state.authUserReducer);\r\n\r\n  const [value, setValue] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value)\r\n  };\r\n\r\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.target.value)\r\n  };\r\n\r\n  const onChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value)\r\n  };\r\n\r\n  const handlePostRegister = (e: React.SyntheticEvent<Element, Event>) => {\r\n    e.preventDefault();\r\n    if (value && email && password) {\r\n      dispatch(registerUser({ name: value, email: email, password: password }));\r\n    }\r\n  }\r\n\r\n  if (isLoadingAuth) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <section className={`${RegisterStyles.register}`}>\r\n      <form action=\"POST\" className={`${RegisterStyles.register__form}`} onSubmit={handlePostRegister}>\r\n        <h1 className={`${RegisterStyles.register__heading} text text_type_main-medium`}>Регистрация</h1>\r\n        <Input placeholder={'Имя'} name={'name'} value={value} onChange={onChangeName} />\r\n        <EmailInput onChange={onChangeEmail} value={email} name={'email'} size='default' />\r\n        <PasswordInput onChange={onChangePassword} value={password} name={'password'} size='default' />\r\n        <Button disabled={value === '' && email === '' && password === ''} type=\"primary\" size=\"large\">Зарегистрироваться</Button>\r\n      </form>\r\n      <p className='text text_type_main-default text_color_inactive mt-20'>\r\n        Уже зарегистрированы?\r\n        <Link to={'/login'} className={`${RegisterStyles.register__link} ml-2`}>Войти</Link>\r\n      </p>\r\n      <p className={`${RegisterStyles.register__error} text text_type_main-default mt-4`}>{registerErrorMessage}</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ForgotPasswordStyles from './ForgotPassword.module.css';\r\nimport Preloader from 'components/Preloader/Preloader';\r\nimport { useAppDispatch, useAppSelector } from 'services/types/hooks';\r\nimport { postEmailFromForgotPage } from 'services/actions/userAuth';\r\n\r\n\r\nfunction ForgotPassword() {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const { isLoadingAuth, postEmailForgotPageErrorMessage, isEmail } = useAppSelector(state => state.authUserReducer);\r\n\r\n  const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.target.value)\r\n  };\r\n\r\n  const handleGetPermissionToChangePassword = (e: React.SyntheticEvent<Element, Event>) => {\r\n    e.preventDefault();\r\n    if(email) {\r\n      dispatch(postEmailFromForgotPage(email));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isEmail === 'pushToResetPage') history.push(\"/reset-password\");\r\n  }, [isEmail, history]);\r\n\r\n  if (isLoadingAuth) {\r\n    return (<Preloader />)\r\n  }\r\n  else {\r\n    return (\r\n      <section className={`${ForgotPasswordStyles['forgot-password']}`}>\r\n        <form action=\"POST\" className={`${ForgotPasswordStyles['forgot-password__form']}`} onSubmit={handleGetPermissionToChangePassword}>\r\n          <h1 className={`${ForgotPasswordStyles['forgot-password__heading']} text text_type_main-medium`}>Восстановление пароля</h1>\r\n          <Input value={email} onChange={onChangeEmail} name={'email'} size='default' placeholder='Укажите e-mail' />\r\n          <Button disabled={email === ''} type=\"primary\" size=\"large\">Восстановить</Button>\r\n        </form>\r\n        <p className='text text_type_main-default text_color_inactive mt-20'>\r\n          Вспомнили пароль?\r\n          <Link to={'/login'} className={`${ForgotPasswordStyles['forgot-password__link']} ml-2`}>Войти</Link>\r\n        </p>\r\n        {postEmailForgotPageErrorMessage &&\r\n        <p className={`${ForgotPasswordStyles['forgot-password__error']} text text_type_main-default mt-4`}>{`Произошла ошибка: ${postEmailForgotPageErrorMessage}. Повторите попытку.`}</p>\r\n        }\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ResetPasswordStyles from './ResetPassword.module.css';\r\nimport { useAppDispatch, useAppSelector } from 'services/types/hooks';\r\nimport Preloader from 'components/Preloader/Preloader';\r\nimport { postNewPasswordAction } from 'services/actions/userAuth';\r\n\r\n\r\nfunction ResetPassword() {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const { isLoadingAuth, postNewPasswordError, isEmail } = useAppSelector(state => state.authUserReducer);\r\n\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(isEmail === 'pushToLoginPage') history.push('/login');\r\n    else if (isEmail === '') history.push('/forgot-password')\r\n  }, [isEmail, history]);\r\n\r\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.target.value)\r\n  };\r\n\r\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value)\r\n  };\r\n\r\n  const handlePostNewPassword = (e: React.SyntheticEvent<Element, Event>) => {\r\n    e.preventDefault();\r\n    if (password && value) {\r\n      dispatch(postNewPasswordAction(password, value))\r\n    }\r\n  }\r\n\r\n  if (isLoadingAuth) {\r\n    return (<Preloader />)\r\n  }\r\n  return (\r\n    <section className={`${ResetPasswordStyles['reset-password']}`}>\r\n      <form action=\"POST\" className={`${ResetPasswordStyles['reset-password__form']}`} onSubmit={handlePostNewPassword}>\r\n        <h1 className={`${ResetPasswordStyles['reset-password__heading']} text text_type_main-medium`}>Восстановление пароля</h1>\r\n        <Input\r\n          value={password}\r\n          name={\"password\"}\r\n          placeholder=\"Введите новый пароль\"\r\n          size=\"default\"\r\n          onChange={onChangePassword}\r\n          icon={\"ShowIcon\"}\r\n        />\r\n        <Input placeholder={'Введите код из письма'} name={'token'} onChange={onChangeValue} value={value} />\r\n        <Button disabled={password === '' && value === ''} type=\"primary\" size=\"large\">Сохранить</Button>\r\n      </form>\r\n      <p className='text text_type_main-default text_color_inactive mt-20'>\r\n        Вспомнили пароль?\r\n        <Link to={'/login'} className={`${ResetPasswordStyles['reset-password__link']} ml-2`}>Войти</Link>\r\n      </p>\r\n      {postNewPasswordError &&\r\n        <p className={`${ResetPasswordStyles['reset-password']} text text_type_main-default mt-4`} >{`Произошла ошибка: ${postNewPasswordError}. Повторите попытку.`}</p>\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ResetPassword;\r\n","import {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\nimport stylesHeader from \"./Header.module.css\";\n\nfunction AppHeader() {\n\n  const { pathname } = useLocation();\n  const typeProfileIcon = pathname === '/profile' ? 'primary' : 'secondary';\n  const typeBurgerIcon = pathname === '/' ? 'primary' : 'secondary';\n  const typeListIcon = pathname === '/feed' ? 'primary' : 'secondary';\n\n  return (\n    <header className={`${stylesHeader.header} pt-4 pb-4`}>\n      <nav className={stylesHeader.header__nav}>\n        <ul className={`${stylesHeader['header__nav-list']}`}>\n          <li>\n            <NavLink\n              exact\n              to={'/'}\n              className={`${stylesHeader['header__nav-link']} text text_type_main-default text_color_inactive pl-5 pr-5`}\n              activeClassName={`${stylesHeader['header__nav-link_active']} pl-5 pr-5`}\n            >\n              <BurgerIcon type={typeBurgerIcon} />\n              <p className=\"ml-2\">Конструктор</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              exact\n              to={'/feed'}\n              className={`${stylesHeader['header__nav-link']} text text_type_main-default text_color_inactive pl-5 pr-5`}\n              activeClassName={`${stylesHeader['header__nav-link_active']} pl-5 pr-5`}\n            >\n              <ListIcon type={typeListIcon} />\n              <p className=\"ml-2\">Лента заказов</p>\n            </NavLink>\n          </li>\n          <li className={`${stylesHeader['header__nav-link_right']}`}>\n            <NavLink\n              to={'/profile'}\n              className={`${stylesHeader['header__nav-link']} text text_type_main-default text_color_inactive pl-5 pr-5`}\n              activeClassName={`${stylesHeader['header__nav-link_active']} pl-5 pr-5`}\n            >\n              <ProfileIcon type={typeProfileIcon} />\n              <p className=\"ml-2\">Личный кабинет</p>\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Link to={'/'} className={`${stylesHeader.header__logo}`}>\n        <Logo />\n      </Link>\n    </header>\n  )\n}\n\nexport default AppHeader\n","export const ADD_INGREDIENT_INSIDE_CONSTRUCTOR: 'ADD_INGREDIENT_INSIDE_CONSTRUCTOR' = 'ADD_INGREDIENT_INSIDE_CONSTRUCTOR';\r\nexport const REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR: 'REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR' = 'REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR';\r\nexport const TOGGLE_BUN_INSIDE_CONSTRUCTOR: 'TOGGLE_BUN_INSIDE_CONSTRUCTOR' = 'TOGGLE_BUN_INSIDE_CONSTRUCTOR';\r\nexport const CHANGE_INGREDIENT_POSITION: 'CHANGE_INGREDIENT_POSITION' = 'CHANGE_INGREDIENT_POSITION';\r\nexport const CLEAR_CONSTRUCTOR: 'CLEAR_CONSTRUCTOR' = 'CLEAR_CONSTRUCTOR';\r\n","import {\r\n  ADD_INGREDIENT_INSIDE_CONSTRUCTOR,\r\n  REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR,\r\n  TOGGLE_BUN_INSIDE_CONSTRUCTOR,\r\n  CHANGE_INGREDIENT_POSITION,\r\n  CLEAR_CONSTRUCTOR\r\n} from '../constants/burgerConstructor';\r\nimport { IIngredient } from '../types/data';\r\n\r\nexport interface IAddIngredientInsideConstructor {\r\n  readonly type: typeof ADD_INGREDIENT_INSIDE_CONSTRUCTOR;\r\n  ingredient: IIngredient;\r\n}\r\n\r\nexport interface IRemoveIngredientInsideConstructor {\r\n  readonly type: typeof REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR;\r\n  uid: string;\r\n}\r\n\r\nexport interface IToggleBunInsideConstructor {\r\n  readonly type: typeof TOGGLE_BUN_INSIDE_CONSTRUCTOR;\r\n  ingredient: IIngredient;\r\n}\r\n\r\nexport interface IChangeIngredientPosition {\r\n  readonly type: typeof CHANGE_INGREDIENT_POSITION;\r\n  dragUid: string;\r\n  hoverUid: string;\r\n}\r\n\r\nexport interface IClearConstructor {\r\n  readonly type: typeof CLEAR_CONSTRUCTOR;\r\n}\r\n\r\nexport type TBurgerConstructorActions =\r\n  | IAddIngredientInsideConstructor\r\n  | IRemoveIngredientInsideConstructor\r\n  | IToggleBunInsideConstructor\r\n  | IChangeIngredientPosition\r\n  | IClearConstructor\r\n\r\n\r\nexport const toggleBunInsideConstructor = (ingredient: IIngredient): IToggleBunInsideConstructor => ({\r\n  type: TOGGLE_BUN_INSIDE_CONSTRUCTOR,\r\n  ingredient\r\n});\r\n\r\nexport const addIngredientInsideConstructor = (ingredient: any): IAddIngredientInsideConstructor => ({\r\n  type: ADD_INGREDIENT_INSIDE_CONSTRUCTOR,\r\n  ingredient\r\n});\r\n\r\nexport const clearConstructor = (): IClearConstructor => ({\r\n  type: CLEAR_CONSTRUCTOR\r\n});\r\n\r\nexport const changeIngredientPosition = (dragUid: string, hoverUid: string): IChangeIngredientPosition => ({\r\n  type: CHANGE_INGREDIENT_POSITION,\r\n  dragUid,\r\n  hoverUid\r\n});\r\n\r\nexport const removeIngredientInsideConstructor = (uid: string): IRemoveIngredientInsideConstructor => ({\r\n  type: REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR,\r\n  uid\r\n});\r\n","import { NavLink } from 'react-router-dom';\r\nimport { clearConstructor } from 'services/actions/burgerConstructor';\r\nimport { logoutUser } from 'services/actions/userAuth';\r\nimport { useAppDispatch, useAppSelector } from 'services/types/hooks';\r\nimport ProfileNavStyles from './ProfileNav.module.css';\r\n\r\nfunction ProfileNav() {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { changeUserResultMessage } = useAppSelector(state => state.authUserReducer);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n    dispatch(clearConstructor());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className={`${ProfileNavStyles.profile__list}`}>\r\n        <li className={`${ProfileNavStyles['profile__list-element']}`}>\r\n          <NavLink\r\n            exact\r\n            to={'/profile'}\r\n            className={`${ProfileNavStyles['profile__link']} text text_type_main-medium text_color_inactive`}\r\n            activeClassName={`${ProfileNavStyles['profile__link_active']} text text_type_main-medium`}>\r\n            Профиль\r\n          </NavLink>\r\n        </li>\r\n        <li className={`${ProfileNavStyles['profile__list-element']}`}>\r\n          <NavLink\r\n            exact\r\n            to={'/profile/orders'}\r\n            className={`${ProfileNavStyles['profile__link']} text text_type_main-medium text_color_inactive`}\r\n            activeClassName={`${ProfileNavStyles['profile__link_active']} text text_type_main-medium`}>\r\n            История заказов\r\n          </NavLink>\r\n        </li>\r\n        <button onClick={handleLogout} className={`${ProfileNavStyles['profile__exit']} text text_type_main-medium text_color_inactive`}>Выход</button>\r\n      </ul>\r\n      <p className={`${ProfileNavStyles['profile__text']} text text_type_main-default text_color_inactive`}>В этом разделе вы можете изменить свои персональные данные</p>\r\n      <p className={`${ProfileNavStyles['profile__result']} text text_type_main-default mt-5`}>{changeUserResultMessage}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileNav;\r\n","import { useState } from 'react';\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useAppDispatch } from 'services/types/hooks';\r\nimport { patchNewUserDataAction } from 'services/actions/userAuth';\r\nimport { useAppSelector } from 'services/types/hooks';\r\nimport Preloader from 'components/Preloader/Preloader';\r\nimport ProfileNav from 'components/ProfileNav/ProfileNav';\r\nimport ProfileStyles from './Profile.module.css';\r\n\r\nfunction Profile() {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { email, name } = useAppSelector(state => state.authUserReducer.user);\r\n  const { isLoadingAuth } = useAppSelector(state => state.authUserReducer);\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [login, setLogin] = useState(email);\r\n  const [inputName, setInputName] = useState(name);\r\n\r\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.target.value)\r\n  };\r\n\r\n  const onChangeLogin = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLogin(e.target.value)\r\n  };\r\n\r\n  const onChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputName(e.target.value)\r\n  };\r\n\r\n  const handleSaveNewUserData = (e: React.SyntheticEvent<Element, Event>) => {\r\n    e.preventDefault();\r\n    if (login && password && inputName) {\r\n      dispatch(patchNewUserDataAction({ email: login, password: password, name: inputName }));\r\n    }\r\n  }\r\n\r\n  const handleCancelChanges = (e: React.SyntheticEvent<Element, Event>) => {\r\n    e.preventDefault();\r\n    setLogin(email);\r\n    setInputName(name);\r\n    setPassword('');\r\n  }\r\n\r\n  if (isLoadingAuth) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <section className={`${ProfileStyles.profile}`}>\r\n      <ProfileNav />\r\n      <form method=\"POST\" name=\"profile\" className={`${ProfileStyles['profile__form']}`} onSubmit={handleSaveNewUserData}>\r\n        <div className={`${ProfileStyles['form']}`}>\r\n          <Input placeholder='Имя' icon='EditIcon' onChange={onChangeName} value={inputName} />\r\n        </div>\r\n        <div className={`${ProfileStyles['form']}`}>\r\n          <Input placeholder='Логин' icon='EditIcon' onChange={onChangeLogin} value={login} />\r\n        </div>\r\n        <div className={`${ProfileStyles['form']}`}>\r\n          <Input placeholder='Пароль' icon='EditIcon' onChange={onChangePassword} value={password} />\r\n        </div>\r\n        <div className={`${ProfileStyles['profile__buttons-container']}`}>\r\n          <Button>Сохранить</Button>\r\n          <button onClick={handleCancelChanges} className={`${ProfileStyles['profile__cansel']} text text_type_main-medium ml-20`}>Отмена</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { useEffect, useState } from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IFullTabProps } from 'services/types/data';\r\n\r\n\r\nconst FullTab = ({ bunHeadingRef, sauceHeadingRef, mainIngredientHeadingRef, value }: IFullTabProps) => {\r\n\r\n  const [current, setCurrent] = useState(value);\r\n\r\n  useEffect(() => setCurrent(value), [value]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <Tab value=\"one\" active={current === 'one'} onClick={(value) => {\r\n        setCurrent(value);\r\n        bunHeadingRef.current?.scrollIntoView();\r\n      }} >\r\n        Булки\r\n      </Tab>\r\n      <Tab value=\"two\" active={current === 'two'} onClick={(value) => {\r\n        setCurrent(value);\r\n        sauceHeadingRef.current?.scrollIntoView();\r\n      }}>\r\n        Соусы\r\n      </Tab>\r\n      <Tab value=\"three\" active={current === 'three'} onClick={(value) => {\r\n        setCurrent(value);\r\n        mainIngredientHeadingRef.current?.scrollIntoView();\r\n      }}>\r\n        Начинки\r\n      </Tab>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FullTab\r\n","import { useMemo } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IIngredientProps } from 'services/types/data';\r\nimport { useAppSelector } from 'services/types/hooks';\r\nimport IngStyles from './Ingredient.module.css';\r\n\r\nfunction Ingredient({ image, name, price, id }: IIngredientProps) {\r\n\r\n  const ingredientsInsideConstructor = useAppSelector(state => state.burgerConstructor.constructorElem);\r\n\r\n  // Подсчет количества каждого ингредиента в конструкторе.\r\n  const count = useMemo(() =>\r\n    ingredientsInsideConstructor.reduce((acc: number, el: {_id: string}) => el._id === id ? acc + 1 : acc, 0), [ingredientsInsideConstructor]\r\n  );\r\n\r\n  const [{ opacity }, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: { id },\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.2 : 1,\r\n    })\r\n  });\r\n\r\n  return (\r\n    <div ref={dragRef} style={{ opacity }}>\r\n      {count > 0 && <Counter count={count} size={'default'} />}\r\n      <img src={image} alt={name} className={`ml-4`} />\r\n      <div className={`${IngStyles['ingredient__price-container']} mb-1 mt-1`}>\r\n        <p className={`text text_type_digits-default mr-2`}>{price}</p>\r\n        <CurrencyIcon type=\"primary\" />\r\n      </div>\r\n      <h2 className={`${IngStyles['ingredient']} text text_type_main-default`}>{name}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ingredient\r\n","import IngredientDetailsStyles from './IngredientDetails.module.css';\r\nimport { IIngredient, IIngredientDetails } from '../../services/types/data';\r\n\r\nfunction IngredientDetails ({ ingredient }: IIngredientDetails<IIngredient>) {\r\n\r\n  return (\r\n    <div className={`${IngredientDetailsStyles.ingredientDetails} pr-10 pl-10 pb-15`}>\r\n      <h1 className={`text text_type_main-large`}>Детали ингредиента</h1>\r\n      <img src={ingredient.image_large} alt={ingredient.name}\r\n        className={`${IngredientDetailsStyles.ingredientDetails__image} mb-4`}\r\n      />\r\n      <h2 className={`${IngredientDetailsStyles.ingredientDetails__name} text text_type_main-medium mb-8`}>\r\n        {ingredient.name}\r\n      </h2>\r\n      <ul className={`${IngredientDetailsStyles.ingredientDetails__list}`}>\r\n        <li className={`${IngredientDetailsStyles['ingredientDetails__list-elem']} mr-5`}>\r\n          <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Калории,ккал</h3>\r\n          <p className={`text text_type_digits-default`}>{ingredient.calories}</p>\r\n        </li>\r\n        <li className={`${IngredientDetailsStyles['ingredientDetails__list-elem']} mr-5`}>\r\n          <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Белки, г</h3>\r\n          <p className={`text text_type_digits-default`}>{ingredient.proteins}</p>\r\n        </li>\r\n        <li className={`${IngredientDetailsStyles['ingredientDetails__list-elem']} mr-5`}>\r\n          <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Жиры, г</h3>\r\n          <p className={`text text_type_digits-default`}>{ingredient.fat}</p>\r\n        </li>\r\n        <li className={`${IngredientDetailsStyles['ingredientDetails__list-elem']} mr-5`}>\r\n          <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Углеводы, г</h3>\r\n          <p className={`text text_type_digits-default`}>{ingredient.carbohydrates}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IngredientDetails\r\n","import ModalOverlayStyles from './ModalOverlay.module.css';\r\n\r\nfunction ModalOverlay ({ children, overlayRef }: {overlayRef?: React.RefObject<HTMLDivElement>; children?:React.ReactNode}) {\r\n\r\n  return (\r\n    <div className={ModalOverlayStyles.modalOverlay} ref={overlayRef}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalOverlay\r\n","import { FC, useRef, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from 'components/ModalOverlay/ModalOverlay';\r\nimport { modalContainer } from 'utils/constants';\r\nimport { IModalProps } from 'services/types/data';\r\nimport ModalStyle from './Modal.module.css';\r\n\r\nexport const Modal: FC<IModalProps> = ({ children, handleCloseModal }) => {\r\n\r\n  const overlayRef = useRef<HTMLDivElement>(null);\r\n\r\n  //Установить и удалить слушатель на нажатие Esc.\r\n  useEffect(() => {\r\n\r\n    // Закрыть модальное окно по нажатию Escape.\r\n    const handleCloseEsc = (evt: KeyboardEvent) => {\r\n      if (evt.key === 'Escape')\r\n        handleCloseModal();\r\n    };\r\n\r\n    document.addEventListener('keydown', handleCloseEsc);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleCloseEsc);\r\n    }\r\n  }, [handleCloseModal]);\r\n\r\n  //Установить слушатель на клик вне области модального окна.\r\n  useEffect(() => {\r\n\r\n    // Закрыть модальное окно по нажатию overlay.\r\n    const handleCloseOverlay = (evt: MouseEvent) => {\r\n      if (evt.target === overlayRef.current)\r\n        handleCloseModal();\r\n    };\r\n\r\n    document.addEventListener('click', handleCloseOverlay)\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleCloseOverlay)\r\n    }\r\n  }, [handleCloseModal]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={`${ModalStyle.modal} ${ModalStyle.modal_open} `}>\r\n      <ModalOverlay overlayRef={overlayRef} />\r\n      <div className={ModalStyle.modal__content}>\r\n        <button className={`${ModalStyle['modal__button-close']}`} onClick={handleCloseModal}>\r\n          <CloseIcon type=\"primary\" />\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    modalContainer\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","export const ADD_INGREDIENT_DETAILS: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT_DETAILS: 'REMOVE_INGREDIENT_DETAILS' = 'REMOVE_INGREDIENT_DETAILS';\r\n","import { useRef, useMemo, useCallback, useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport FullTab from 'components/FullTab/FullTab';\r\nimport Ingredient from 'components/Ingridient/Ingredient';\r\nimport IngredientDetails from 'components/IngredientDetails/IngredientDetails';\r\nimport Modal from 'components/Modal/Modal';\r\nimport { IIngredient } from '../../services/types/data';\r\nimport { useAppSelector, useAppDispatch } from 'services/types/hooks';\r\nimport { addIngredientDetails, removeIngredientDetails } from 'services/actions/ingredientDetails';\r\nimport BurgerIngrStyles from './BurgerIngredients.module.css';\r\n\r\nfunction BurgerIngredients() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const bunHeadingRef = useRef<HTMLHeadingElement>(null);\r\n  const sauceHeadingRef = useRef<HTMLHeadingElement>(null);\r\n  const mainIngredientHeadingRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  const { ingredientsData } = useAppSelector(state => state.feedIngredients);\r\n  const { ingredientDetails } = useAppSelector(state => state.ingredientDetails);\r\n\r\n  const [value, setValue] = useState(\"one\");\r\n\r\n  // Разделить все ингредиенты по типам в массивы.\r\n  const bunIngredient = useMemo(() => ingredientsData.filter(product => product.type === 'bun'), [ingredientsData]);\r\n  const sauceIngredient = useMemo(() => ingredientsData.filter(product => product.type === 'sauce'), [ingredientsData]);\r\n  const mainIngredient = useMemo(() => ingredientsData.filter(product => product.type === 'main'), [ingredientsData]);\r\n\r\n  // Найти объект ингредиента по выбранному id.\r\n  const findSelectedIngredient = (selectIngredientId: string) => {\r\n    return ingredientsData.find(ingr => ingr._id === selectIngredientId);\r\n  };\r\n\r\n  // Открыть модальное окно с данными ингредиента.\r\n  const handleOpenIngredient = (id: string) => {\r\n    const selectedIngredient = findSelectedIngredient(id)\r\n    if (selectedIngredient) {\r\n      dispatch(addIngredientDetails(selectedIngredient))\r\n    }\r\n  };\r\n\r\n  // Закрыть модальное окно.\r\n  const handleCloseIngredient = () => {\r\n    dispatch(removeIngredientDetails(null))\r\n    history.replace('/');\r\n  };\r\n\r\n  // Рендер списка ингредиента.\r\n  const renderIngredient = ({ image, name, price, _id }: IIngredient) => (\r\n    <li onClickCapture={() => handleOpenIngredient(_id)} key={_id} className={`${BurgerIngrStyles['burger-ingredients__list-elem']}`}>\r\n      <Link className={`${BurgerIngrStyles['burger-ingredients__link']}`} to={{\r\n        pathname: `/ingredients/${_id}`,\r\n        state: { background: location }\r\n      }}\r\n      >\r\n        <Ingredient image={image} name={name} price={price} id={_id} />\r\n      </Link>\r\n    </li>\r\n  );\r\n\r\n  // Расчет координат заголовков для своевременного переключения при скролле.\r\n  const handleScroll = useCallback((e) => {\r\n    // Координаты верхней части списка ингредиентов.\r\n    const mainBlockTopCoordinate: number = e.target.getBoundingClientRect().top;\r\n\r\n    // Получить координаты заголовков.\r\n    const getCoordinates = (ref: React.RefObject<HTMLHeadingElement>) => {\r\n      if (ref.current !== null) {\r\n        return {\r\n          top: ref.current.getBoundingClientRect().top,\r\n        };\r\n      } else {\r\n        return {\r\n          top: mainBlockTopCoordinate,\r\n        };\r\n      }\r\n    };\r\n\r\n    // Расчет близости заголовков к блоку ингредиентов.\r\n\r\n    const bunHeaderCoordinates = Math.abs(getCoordinates(bunHeadingRef).top - mainBlockTopCoordinate);\r\n    const sauceHeaderCoordinates = Math.abs(getCoordinates(sauceHeadingRef).top - mainBlockTopCoordinate);\r\n    const mainIngredientCoordinates = Math.abs(getCoordinates(mainIngredientHeadingRef).top - mainBlockTopCoordinate);\r\n\r\n    // Сравнение координат заголовков для актуальной их подсветки.\r\n    sauceHeaderCoordinates > mainIngredientCoordinates ?\r\n      setValue(\"three\") :\r\n      bunHeaderCoordinates > sauceHeaderCoordinates ?\r\n        setValue(\"two\") : setValue(\"one\");\r\n  }, []);\r\n\r\n  return (\r\n    <section className={`${BurgerIngrStyles['burger-ingredients']} pt-10 mr-10`} >\r\n      <h1 className={`text text_type_main-large mb-5`}>Соберите бургер</h1>\r\n      <FullTab bunHeadingRef={bunHeadingRef} sauceHeadingRef={sauceHeadingRef} mainIngredientHeadingRef={mainIngredientHeadingRef} value={value} />\r\n      <div className={`${BurgerIngrStyles['burger-ingredients__container']}`} onScroll={handleScroll}>\r\n        <h2 ref={bunHeadingRef} className={`text text_type_main-medium mt-10 mb-6`}>Булки</h2>\r\n        <ul className={`${BurgerIngrStyles['burger-ingredients__ingridients-list']} pl-4 pr-4`}>\r\n          {bunIngredient.map(renderIngredient)}\r\n        </ul>\r\n        <h2 ref={sauceHeadingRef} className={`text text_type_main-medium mt-10 mb-6`}>Соусы</h2>\r\n        <ul className={`${BurgerIngrStyles['burger-ingredients__ingridients-list']} pl-4 pr-4`}>\r\n          {sauceIngredient.map(renderIngredient)}\r\n        </ul>\r\n        <h2 ref={mainIngredientHeadingRef} className={`text text_type_main-medium mt-10 mb-6`}>Начинки</h2>\r\n        <ul className={`${BurgerIngrStyles['burger-ingredients__ingridients-list']} pl-4 pr-4`}>\r\n          {mainIngredient.map(renderIngredient)}\r\n        </ul>\r\n      </div>\r\n      {ingredientDetails && (\r\n        <Modal handleCloseModal={handleCloseIngredient}>\r\n          <IngredientDetails ingredient={ingredientDetails}></IngredientDetails>\r\n        </Modal>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BurgerIngredients\r\n","import { ADD_INGREDIENT_DETAILS, REMOVE_INGREDIENT_DETAILS } from '../constants/ingredientDetails';\r\nimport { IIngredient } from '../types/data';\r\n\r\nexport interface IAddIngredientDetails {\r\n  readonly type: typeof ADD_INGREDIENT_DETAILS;\r\n  ingredientDetails: IIngredient;\r\n}\r\n\r\nexport interface IRemoveIngredientDetails {\r\n  readonly type: typeof REMOVE_INGREDIENT_DETAILS;\r\n  ingredientDetails: null\r\n}\r\n\r\nexport const addIngredientDetails = (ingredientDetails: IIngredient): IAddIngredientDetails => ({\r\n  type: ADD_INGREDIENT_DETAILS,\r\n  ingredientDetails\r\n});\r\n\r\nexport const removeIngredientDetails = (ingredientDetails: null): IRemoveIngredientDetails => ({\r\n  type: REMOVE_INGREDIENT_DETAILS,\r\n  ingredientDetails\r\n});\r\n\r\nexport type TIngredientDetails = IAddIngredientDetails | IRemoveIngredientDetails;\r\n","export default __webpack_public_path__ + \"static/media/done.2022ce2b.svg\";","import done from 'images/done.svg';\r\nimport { IOrderDetailsProps } from 'services/types/data';\r\nimport OrderDetailsStyles from './OrderDetails.module.css';\r\n\r\nfunction OrderDetails({ orderNum, errorOrderNum }: IOrderDetailsProps) {\r\n\r\n  return (\r\n    <div className={`${OrderDetailsStyles.orderDetails} pt-30 pb-30`}>\r\n      {orderNum &&\r\n        <h1 className={`${OrderDetailsStyles.orderDetails__heading} text text_type_digits-large mb-8`}>{orderNum}</h1>\r\n      }\r\n      {errorOrderNum &&\r\n        <h1 className={`${OrderDetailsStyles.orderDetails__heading} text text_type_digits-default mb-8`}>{errorOrderNum}</h1>\r\n      }\r\n      <p className={`${OrderDetailsStyles.orderDetails__text} text text_type_main-medium mb-15`}>\r\n        идентификатор заказа\r\n      </p>\r\n      <img src={done} alt=\"Белая галочка.\" className={`${OrderDetailsStyles.orderDetails__image}`} />\r\n      <p className={`${OrderDetailsStyles.orderDetails__text} text text_type_main-default mb-2`}>\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className={`${OrderDetailsStyles.orderDetails__text} text text_type_main-default text_color_inactive`}>\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderDetails\r\n","import { useDrag, useDrop } from 'react-dnd';\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IConstructorIngredientProps } from 'services/types/data';\r\nimport { useAppDispatch } from 'services/types/hooks';\r\nimport { changeIngredientPosition, removeIngredientInsideConstructor } from 'services/actions/burgerConstructor';\r\nimport ConstructorIngredientStyles from './ConstructorIngredient.module.css';\r\n\r\nfunction ConstructorIngredient({ name, image, price, uid }: IConstructorIngredientProps) {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [, dragRef] = useDrag({\r\n    type: 'constructor-item',\r\n    item: { uid }\r\n  });\r\n\r\n  const [, dropRef] = useDrop({\r\n    accept: 'constructor-item',\r\n    hover: (item: { uid: string }) => {\r\n      if (uid) {\r\n        dispatch(changeIngredientPosition(item.uid, uid)\r\n        )\r\n      }\r\n    }\r\n  });\r\n\r\n  function attachRef(el: any) {\r\n    dragRef(el)\r\n    dropRef(el)\r\n  }\r\n\r\n  // Удалить ингредиент из конструктора.\r\n  const handleDeleteIngredient = (uid: string | undefined) => {\r\n    if (uid) {\r\n      dispatch(removeIngredientInsideConstructor(uid))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={attachRef} className={`${ConstructorIngredientStyles['burger-constructor__element']}`}>\r\n      <DragIcon type={'secondary'} />\r\n      <ConstructorElement\r\n        isLocked={false}\r\n        text={name}\r\n        price={price}\r\n        thumbnail={image}\r\n        handleClose={() => handleDeleteIngredient(uid)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConstructorIngredient\r\n","export const POST_ORDER_SUCCESS: 'POST_ORDER_SUCCESS' = 'POST_ORDER_SUCCESS';\r\nexport const POST_ORDER_FAILED: 'POST_ORDER_FAILED' = 'POST_ORDER_FAILED';\r\nexport const HANDLE_CLOSE_ORDER_MODAL: 'HANDLE_CLOSE_ORDER_MODAL' = 'HANDLE_CLOSE_ORDER_MODAL';\r\nexport const POST_ORDER_REQUEST: 'POST_ORDER_REQUEST' = 'POST_ORDER_REQUEST';\r\nexport const ADD_CURRENT_ORDER_DETAILS: 'ADD_CURRENT_ORDER_DETAILS' = 'ADD_CURRENT_ORDER_DETAILS';\r\nexport const REMOVE_CURRENT_ORDER_DETAILS: 'REMOVE_CURRENT_ORDER_DETAILS' = 'REMOVE_CURRENT_ORDER_DETAILS';\r\n","import { Action, ActionCreator } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { IFeedOrder } from 'services/types/data';\r\nimport { RootState } from 'services/types/hooks';\r\nimport { postOrder } from 'utils/api';\r\nimport { getCookie } from 'utils/cookie';\r\nimport {\r\n  POST_ORDER_SUCCESS,\r\n  POST_ORDER_FAILED,\r\n  HANDLE_CLOSE_ORDER_MODAL,\r\n  POST_ORDER_REQUEST,\r\n  ADD_CURRENT_ORDER_DETAILS,\r\n  REMOVE_CURRENT_ORDER_DETAILS\r\n} from '../constants/orderDetails';\r\n\r\nexport interface IPostOrderRequest {\r\n  readonly type: typeof POST_ORDER_REQUEST;\r\n}\r\n\r\nexport interface IPostOrderSuccess {\r\n  readonly type: typeof POST_ORDER_SUCCESS;\r\n  orderNum: number | null;\r\n}\r\n\r\nexport interface IHandleCloseOrderModal {\r\n  readonly type: typeof HANDLE_CLOSE_ORDER_MODAL;\r\n}\r\n\r\nexport interface IPostOrderFailed {\r\n  readonly type: typeof POST_ORDER_FAILED;\r\n  error: string | null;\r\n}\r\n\r\nexport interface IAddCurrentOrderDetails {\r\n  readonly type: typeof ADD_CURRENT_ORDER_DETAILS;\r\n  payload: IFeedOrder\r\n}\r\n\r\nexport interface IRemoveCurrentOrderDetails {\r\n  readonly type: typeof REMOVE_CURRENT_ORDER_DETAILS;\r\n}\r\n\r\nexport type TOrderDetailsActions =\r\n  | IPostOrderRequest\r\n  | IPostOrderSuccess\r\n  | IPostOrderFailed\r\n  | IHandleCloseOrderModal\r\n  | IAddCurrentOrderDetails\r\n  | IRemoveCurrentOrderDetails;\r\n\r\nexport type AppThunk<TReturn = void> = ActionCreator<\r\n  ThunkAction<TReturn, Action, RootState, TOrderDetailsActions>\r\n>;\r\n\r\nexport const postOrderRequest = (): IPostOrderRequest => ({\r\n  type: POST_ORDER_REQUEST\r\n});\r\n\r\nexport const postOrderSuccess = (orderNum: number): IPostOrderSuccess => ({\r\n  type: POST_ORDER_SUCCESS,\r\n  orderNum\r\n});\r\n\r\nexport const postOrderFailed = (error: string): IPostOrderFailed => ({\r\n  type: POST_ORDER_FAILED,\r\n  error\r\n});\r\n\r\nexport const handleCloseOrderModal = (): IHandleCloseOrderModal => ({\r\n  type: HANDLE_CLOSE_ORDER_MODAL\r\n});\r\n\r\nexport const addCurrentOrderDetails = (currentOrder: IFeedOrder): IAddCurrentOrderDetails => ({\r\n  type: ADD_CURRENT_ORDER_DETAILS,\r\n  payload: currentOrder\r\n})\r\n\r\nexport const removeCurrentOrderDetails = (): IRemoveCurrentOrderDetails => ({\r\n  type: REMOVE_CURRENT_ORDER_DETAILS,\r\n})\r\n\r\nexport const getOrderDetails: AppThunk = (idsArray: ReadonlyArray<string>) => {\r\n  const accessToken = getCookie('accessToken');\r\n  return function (dispatch) {\r\n    dispatch(postOrderRequest())\r\n    postOrder(idsArray, accessToken)\r\n      .then((res) => {\r\n        dispatch(postOrderSuccess(res.order.number))\r\n      })\r\n      .catch((error) => {\r\n        dispatch(postOrderFailed(error))\r\n      })\r\n  }\r\n}\r\n\r\n","import { useMemo } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ConstructorElement, CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Preloader from 'components/Preloader/Preloader';\r\nimport Modal from 'components/Modal/Modal';\r\nimport OrderDetails from 'components/OrderDetails/OrderDetails';\r\nimport ConstructorIngredient from 'components/ConstructorIngredient/ConstructorIngredient';\r\nimport { getOrderDetails, handleCloseOrderModal } from '../../services/actions/orderDetails';\r\nimport { IIngredient, IDroppedIngredientId } from '../../services/types/data';\r\nimport { useAppSelector, useAppDispatch } from 'services/types/hooks';\r\nimport { addIngredientInsideConstructor, clearConstructor, toggleBunInsideConstructor } from 'services/actions/burgerConstructor';\r\nimport BurgConstructorStyles from './BurgerConstructor.module.css';\r\n\r\nfunction BurgerConstructor() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  const errorMessage = useAppSelector(state => state.orderDetails.errorMessage);\r\n  const allIngredientsData = useAppSelector(state => state.feedIngredients.ingredientsData);\r\n  const orderNum = useAppSelector(state => state.orderDetails.orderNum);\r\n  const isLoading = useAppSelector(state => state.orderDetails.isLoading);\r\n  const constructorItems = useAppSelector(state => state.burgerConstructor.constructorElem);\r\n  const { isAuth } = useAppSelector(state => state.authUserReducer);\r\n\r\n  const [{ isHover }, dropTarget] = useDrop({\r\n    accept: \"ingredient\",\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n    drop(item: IDroppedIngredientId) {\r\n      addItem(item);\r\n    },\r\n  });\r\n\r\n  // Разделить выбранные ингредиенты для бургера на булки и внутренние ингредиенты.\r\n  const bun = useMemo(() => constructorItems.find(product => product.type === 'bun'), [constructorItems]);\r\n  const mainIngridient = useMemo(() => constructorItems.filter(product => product.type !== 'bun'), [constructorItems]);\r\n\r\n  // Расчет итоговой стоимости.\r\n  const totalPrice = useMemo(() => (bun ? bun.price : 0) * 2 + mainIngridient.reduce((acc, elem) => acc + elem.price, 0), [bun, mainIngridient]);\r\n\r\n  // Добавить ингредиент из списка в конструктор.\r\n  const addItem = (item: IDroppedIngredientId) => {\r\n    // Найти перетаскиваемый ингредиент в полном списке ингредиентов.\r\n    const dropedIngredient: IIngredient | undefined = allIngredientsData.find(ingr => ingr._id === item.id)\r\n\r\n    // Если есть булка и перетаскиваемый объект тоже булка, то заменить в конструкторе, иначе добавить ингредиент.\r\n    if (dropedIngredient !== undefined) {\r\n      if (bun && dropedIngredient.type === 'bun') {\r\n        dispatch(toggleBunInsideConstructor(dropedIngredient))\r\n      }\r\n      else {\r\n        dispatch(addIngredientInsideConstructor({...dropedIngredient, uid: uuidv4()}))\r\n      }\r\n    }\r\n  };\r\n\r\n  //  Создать элемент ингредиента в конструкторе. Ключ на основе индекса.\r\n  const createInnerIngredient = ({ image, name, price, uid }: IIngredient) => {\r\n    return (\r\n      <li key={uid} className={`${BurgConstructorStyles['burger-constructor__orderList-element']} mr-2`}>\r\n        <ConstructorIngredient\r\n          name={name}\r\n          image={image}\r\n          price={price}\r\n          uid={uid}\r\n        />\r\n      </li>\r\n    );\r\n  };\r\n\r\n  // Создать элемент булки в конструкторе.\r\n  const createBunIngredient = ({ image, name, price, uid }: IIngredient, type: 'top' | 'bottom', side: string) => {\r\n    return (\r\n      <li key={`${uid}${side}`} className={`${BurgConstructorStyles['burger-constructor__orderList-element']} mr-2 ml-8`}>\r\n        <ConstructorElement\r\n          type={type}\r\n          isLocked={true}\r\n          text={`${name} (${side})`}\r\n          price={price}\r\n          thumbnail={image}\r\n        />\r\n      </li>\r\n    )\r\n  };\r\n\r\n  //Получить номер заказа.\r\n  const getOrder = () => {\r\n    if (!isAuth) {\r\n      history.replace('/login');\r\n    }\r\n    else {\r\n      const totalIds: Array<string> = constructorItems.map((el) => el._id);\r\n      if (totalIds.length) {\r\n        dispatch(getOrderDetails(totalIds));\r\n        dispatch(clearConstructor());\r\n      }\r\n    }\r\n  };\r\n\r\n  //Закрыть модальное окно.\r\n  const handleCloseModal = () => {\r\n    dispatch(handleCloseOrderModal())\r\n  };\r\n\r\n  const constructorBorder = `${BurgConstructorStyles['burger-constructor']} ${isHover ? BurgConstructorStyles.onHover : \"\"} pt-25 pl-4`;\r\n\r\n  return (\r\n    <>\r\n      <section ref={dropTarget} className={constructorBorder}>\r\n        <ul className={`${BurgConstructorStyles['burger-constructor__bunList']}`}>\r\n          {bun && createBunIngredient(bun, 'top', 'верх')}\r\n          <ul className={`${BurgConstructorStyles['burger-constructor__orderList']}`}>\r\n            {mainIngridient.map(createInnerIngredient)}\r\n          </ul>\r\n          {bun && createBunIngredient(bun, 'bottom', 'низ')}\r\n        </ul>\r\n        {totalPrice === 0 && (\r\n          <p className={`${BurgConstructorStyles['burger-constructor__text']} text text_type_main-default`}>\r\n            Для заказа, пожалуйста, перенесите любой ингредиент на эту сторону.\r\n          </p>\r\n        )}\r\n        <div className={`${BurgConstructorStyles['burger-constructor__total-container']} mt-10`}>\r\n          <div className={`${BurgConstructorStyles['burger-constructor__total-price-container']} mr-10`}>\r\n            <p className={`${BurgConstructorStyles['burger-constructor__total-price']} text text_type_digits-medium`}>{totalPrice}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n          <Button disabled={!(totalPrice > 0)} type=\"primary\" size=\"large\" onClick={getOrder}>\r\n            Оформить заказ\r\n          </Button>\r\n        </div>\r\n        {isLoading && (\r\n          <Preloader />\r\n        )}\r\n        {(orderNum || errorMessage) && (\r\n          <Modal handleCloseModal={handleCloseModal}>\r\n            <OrderDetails orderNum={orderNum} errorOrderNum={errorMessage} />\r\n          </Modal>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import { Link } from \"react-router-dom\";\r\nimport styles404 from \"./NotFound404.module.css\";\r\n\r\nfunction NotFound404 () {\r\n  return (\r\n    <div className={`${styles404.notFound}`}>\r\n      <p className={`${styles404.notFound__text} text text_type_digits-large mt-20 mb-20`}>404</p>\r\n      <p className={`${styles404.notFound__text} text text_type_main-medium mb-10`}>К сожалению, такая страница не найдена или находитя в разработке.</p>\r\n      <p className={`${styles404.notFound__text} text text_type_main-medium`}>\r\n        Перейти на <Link className={`${styles404.notFound__link}`} to={'/'}>главную страницу</Link></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound404;\r\n","export const GET_FEED_REQUEST: 'GET_FEED_REQUEST' = 'GET_FEED_REQUEST';\r\nexport const GET_FEED_SUCCESS: 'GET_FEED_SUCCESS' = 'GET_FEED_SUCCESS';\r\nexport const GET_FEED_FAILED: 'GET_FEED_FAILED' = 'GET_FEED_FAILED';\r\n","import { getIngredientsData } from 'utils/api';\r\nimport { store } from 'utils/store';\r\nimport { IIngredient } from '../types/data';\r\nimport {\r\n  GET_FEED_REQUEST,\r\n  GET_FEED_SUCCESS,\r\n  GET_FEED_FAILED\r\n} from '../constants/burgerIngredients';\r\nimport { AppThunk } from 'services/types/hooks';\r\n\r\nexport interface IGetFeedRequest {\r\n  readonly type: typeof GET_FEED_REQUEST;\r\n}\r\n\r\nexport interface IGetFeedSuccess {\r\n  readonly type: typeof GET_FEED_SUCCESS;\r\n  feed: ReadonlyArray<IIngredient>;\r\n}\r\n\r\nexport interface IGetFeedFailed {\r\n  readonly type: typeof GET_FEED_FAILED;\r\n  error: string | null;\r\n}\r\n\r\nexport type TBurgerIngredientsActions =\r\n  | IGetFeedRequest\r\n  | IGetFeedSuccess\r\n  | IGetFeedFailed;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport const getFeedRequest = (): IGetFeedRequest => ({\r\n  type: GET_FEED_REQUEST\r\n});\r\n\r\nexport const getFeedSuccess = (feed: IIngredient[]): IGetFeedSuccess => ({\r\n  type: GET_FEED_SUCCESS,\r\n  feed\r\n});\r\n\r\nexport const getFeedFailed = (error: string): IGetFeedFailed => ({\r\n  type: GET_FEED_FAILED,\r\n  error\r\n});\r\n\r\n// Получить массив ингредиентов от сервера.\r\nexport const getIngredients: AppThunk = () => {\r\n  return function (dispatch) {\r\n    dispatch(getFeedRequest());\r\n    getIngredientsData()\r\n      .then((res) => {\r\n        dispatch(getFeedSuccess(res.data))\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getFeedFailed(error))\r\n      })\r\n  }\r\n}\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useAppSelector } from 'services/types/hooks';\r\n\r\ninterface IProtectedRoute {\r\n  children: any,\r\n  path: string,\r\n  redirectPath: string,\r\n  exact: boolean\r\n}\r\n\r\nfunction ProtectedRoute({ children, redirectPath, exact }: IProtectedRoute) {\r\n\r\n  const { isAuth } = useAppSelector(state => state.authUserReducer);\r\n\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      render={({ location }) => (\r\n        isAuth ? (children) : (<Redirect to={{ pathname: redirectPath, state: { from: location } }} />)\r\n      )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import Preloader from \"components/Preloader/Preloader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAppSelector } from \"services/types/hooks\";\r\nimport IngredientPageStyles from './IngredientDetailsPage.module.css';\r\n\r\nfunction IngredientDetailsPage() {\r\n\r\n  interface IUseParams {\r\n    id: string\r\n  }\r\n\r\n  const { id } = useParams<IUseParams>();\r\n  const { isLoading, errorMessage, ingredientsData } = useAppSelector(state => state.feedIngredients);\r\n\r\n  const ingredientDetails: any = ingredientsData.find(ingr => ingr._id === id)\r\n\r\n  if (!isLoading && !errorMessage && ingredientDetails) {\r\n    return (\r\n      <div className={`${IngredientPageStyles.ingredientDetailsPage} pr-10 pl-10 pb-15`}>\r\n        <h1 className={`${IngredientPageStyles.ingredientDetailsPage__name} text text_type_main-large`}>Детали ингредиента</h1>\r\n        <img src={ingredientDetails.image_large} alt={ingredientDetails.name}\r\n          className={`${IngredientPageStyles.ingredientDetailsPage__image} mb-4`}\r\n        />\r\n        <h2 className={`${IngredientPageStyles.ingredientDetailsPage__name} text text_type_main-medium mb-8`}>\r\n          {ingredientDetails.name}\r\n        </h2>\r\n        <ul className={`${IngredientPageStyles.ingredientDetailsPage__list}`}>\r\n          <li className={`${IngredientPageStyles['ingredientDetailsPage__list-elem']} mr-5`}>\r\n            <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Калории,ккал</h3>\r\n            <p className={`text text_type_digits-default`}>{ingredientDetails.calories}</p>\r\n          </li>\r\n          <li className={`${IngredientPageStyles['ingredientDetailsPage__list-elem']} mr-5`}>\r\n            <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Белки, г</h3>\r\n            <p className={`text text_type_digits-default`}>{ingredientDetails.proteins}</p>\r\n          </li>\r\n          <li className={`${IngredientPageStyles['ingredientDetailsPage__list-elem']} mr-5`}>\r\n            <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Жиры, г</h3>\r\n            <p className={`text text_type_digits-default`}>{ingredientDetails.fat}</p>\r\n          </li>\r\n          <li className={`${IngredientPageStyles['ingredientDetailsPage__list-elem']} mr-5`}>\r\n            <h3 className={`text text_type_main-default text_color_inactive mb-2`}>Углеводы, г</h3>\r\n            <p className={`text text_type_digits-default`}>{ingredientDetails.carbohydrates}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Preloader />\r\n  )\r\n}\r\n\r\nexport default IngredientDetailsPage;\r\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_START_WITH_AUTH: 'WS_CONNECTION_START_WITH_AUTH' = 'WS_CONNECTION_START_WITH_AUTH';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_CONNECTION_START_CLOSED: 'WS_CONNECTION_START_CLOSED' = 'WS_CONNECTION_START_CLOSED';\r\n","import {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_START_CLOSED,\r\n  WS_CONNECTION_START_WITH_AUTH,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_GET_MESSAGE,\r\n} from \"services/constants/wsConstants\";\r\nimport { IWSMessageFeed } from \"services/types/data\";\r\n\r\n\r\nexport interface IWSConnectionStart {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\n\r\nexport interface IWSConnectionStartWithAuth {\r\n  readonly type: typeof WS_CONNECTION_START_WITH_AUTH;\r\n}\r\n\r\nexport interface IWSConnectionSuccess {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IWSConnectionError {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\n\r\nexport interface IWSGetMessage {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  payload: IWSMessageFeed;\r\n}\r\n\r\nexport interface IWSConnectionClosed {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IWSStartConnectionClosed {\r\n  readonly type: typeof WS_CONNECTION_START_CLOSED;\r\n}\r\n\r\nexport type TWSActions =\r\n  | IWSConnectionStart\r\n  | IWSConnectionSuccess\r\n  | IWSConnectionError\r\n  | IWSGetMessage\r\n  | IWSConnectionClosed\r\n  | IWSStartConnectionClosed\r\n  | IWSConnectionStartWithAuth\r\n\r\nexport const wsConnectionStart = (): IWSConnectionStart => ({\r\n  type: WS_CONNECTION_START\r\n});\r\n\r\nexport const wsConnectionStartWithAuth = (): IWSConnectionStartWithAuth => ({\r\n  type: WS_CONNECTION_START_WITH_AUTH\r\n});\r\n\r\nexport const wsConnectionSuccess = (): IWSConnectionSuccess => ({\r\n  type: WS_CONNECTION_SUCCESS\r\n});\r\n\r\nexport const wsConnectionError = (): IWSConnectionError => ({\r\n  type: WS_CONNECTION_ERROR,\r\n});\r\n\r\nexport const wsGetMessage = (data: IWSMessageFeed): IWSGetMessage => ({\r\n  type: WS_GET_MESSAGE,\r\n  payload: data\r\n});\r\n\r\nexport const wsConnectionClosed = (): IWSConnectionClosed => ({\r\n  type: WS_CONNECTION_CLOSED\r\n});\r\n\r\nexport const wsConnectionStartClosed = (): IWSStartConnectionClosed => ({\r\n  type: WS_CONNECTION_START_CLOSED\r\n});\r\n\r\nexport const actionListWithoutAuth = {\r\n  wsConnectionStart: wsConnectionStart(),\r\n  wsConnectionSuccess: wsConnectionSuccess,\r\n  wsConnectionError: wsConnectionError,\r\n  wsConnectionClosed: wsConnectionClosed,\r\n  wsConnectionStartClosed: wsConnectionStartClosed(),\r\n  wsGetMessage: wsGetMessage\r\n}\r\n\r\nexport const actionListWithAuth = {\r\n  wsConnectionStartWithAuth: wsConnectionStartWithAuth(),\r\n  wsConnectionSuccess: wsConnectionSuccess,\r\n  wsConnectionError: wsConnectionError,\r\n  wsConnectionClosed: wsConnectionClosed,\r\n  wsConnectionStartClosed: wsConnectionStartClosed(),\r\n  wsGetMessage: wsGetMessage\r\n}\r\n","\r\n  export const convertDate = (dateOrder: string) => {\r\n    const time = new Date(Date.parse(dateOrder)).toString().split(' ');\r\n    let dayOrder = '';\r\n    const dateNow = new Date();\r\n    const dateNowInMillis = Date.parse(dateNow.toString());\r\n    const millisPassedToday = (dateNow.getHours() * 3600 + dateNow.getMinutes() * 60 + dateNow.getSeconds()) * 1000;\r\n    const dateOrderInMillis = Date.parse(dateOrder);\r\n    const countDaysAgo = Math.ceil((dateNowInMillis - dateOrderInMillis) / 86400000);\r\n\r\n    if (dateNowInMillis - dateOrderInMillis < millisPassedToday) {\r\n      dayOrder = 'Сегодня';\r\n    }\r\n    else if (countDaysAgo === 1) {\r\n      dayOrder = 'Вчера';\r\n    }\r\n    else if (1 < countDaysAgo &&  countDaysAgo < 5) {\r\n      dayOrder = `${countDaysAgo} дня назад`;\r\n    }\r\n    else {\r\n      dayOrder = `${countDaysAgo} дней назад`;\r\n    }\r\n    return `${dayOrder} ${time[4].slice(0, 5)} i-GMT+3`;\r\n  }\r\n","import { useAppSelector } from \"services/types/hooks\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { convertDate } from \"utils/dateOrderFeedPage\";\r\nimport { IIngredient, IOrderData } from \"services/types/data\";\r\nimport styles from \"./OrderDescription.module.css\";\r\n\r\nfunction OrderDescription({ orderData }: IOrderData) {\r\n\r\n  const { ingredientsData } = useAppSelector(state => state.feedIngredients);\r\n\r\n  //Создать объект с полями id ингредиентов и значениями их количества в заказе.\r\n  const ingredientsFromOrder = orderData.ingredients.reduce((acc: any, n: any) => (acc[n] = (acc[n] || 0) + 1, acc), {});\r\n  let totalPrice = 0;\r\n\r\n  //Создать карточку ингредиента в списке.\r\n  const createIngredientElement = (ingredientData: IIngredient, count: number) => {\r\n    ingredientData.type === 'bun' ? totalPrice += ingredientData.price * 2 : totalPrice += ingredientData.price * count;\r\n    return (\r\n      <li key={uuidv4()} className={`${styles[`orderDscr__flex-container`]}`}>\r\n        <img className={`${styles[`orderDscr__image`]} mr-4`} src={ingredientData.image} alt={ingredientData.name} />\r\n        <div className={`${styles[`orderDscr__text-container`]}`}>\r\n          <h3 className={`${styles[`orderDscr__ingr-heading`]} mr-4 text text_type_main-default`}>{ingredientData.name}</h3>\r\n          <p className=\"text text_type_digits-default mr-2 mt-4\">{ingredientData.type === 'bun' ? 2 : count} x {ingredientData.price}</p>\r\n        </div>\r\n        <div className=\"mt-4 mr-6\">\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  //Рендер всех карточек ингредиентов из заказа.\r\n  const renderIngredientElement = (ingredientsFromOrder: any) => {\r\n    const allIngredientsCards = [];\r\n    //Перебор всех ингредиентов в заказе, их поиск и добавление в массив для последующей отрисовки.\r\n    for (let ingredient in ingredientsFromOrder) {\r\n      const ingredientData = ingredientsData.filter((el) => el._id === ingredient);\r\n      allIngredientsCards.push(createIngredientElement(ingredientData[0], ingredientsFromOrder[ingredient]));\r\n    }\r\n    return allIngredientsCards\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.orderDscr} pr-10 pl-10 pb-10`}>\r\n      <h1 className={`${styles.orderDscr__number} text text_type_digits-default mb-10`}>#{orderData.number}</h1>\r\n      <h1 className=\"text text_type_main-medium mb-3\">{orderData.name}</h1>\r\n      <p className={`${styles.orderDscr__status} text text_type_main-default mb-15`}>{orderData.status === 'done' ? 'Выполнен' : 'Готовится'}</p>\r\n      <h2 className=\"text text_type_main-medium mb-6\">Состав:</h2>\r\n      <ul className={`${styles[`orderDscr__list`]}`}>\r\n        {renderIngredientElement(ingredientsFromOrder)}\r\n      </ul>\r\n      <div className={`${styles[`orderDscr__footer-container`]}`}>\r\n        <p className={`${styles.orderDscr__date} text text_type_main-default text_color_inactive`}>{convertDate(orderData.createdAt)}</p>\r\n        <div className={`${styles[`orderDscr__flex-container`]}`}>\r\n          <p className=\"text text_type_digits-default mr-2\">{totalPrice}</p>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderDescription;\r\n","import Preloader from \"components/Preloader/Preloader\";\r\nimport { IIngredient } from \"services/types/data\";\r\nimport { useAppSelector } from \"services/types/hooks\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport stylesOrderFeed from \"./OrderFeed.module.css\";\r\nimport { convertDate } from \"utils/dateOrderFeedPage\";\r\n\r\nexport default function OrderFeed({ orderData }: any) {\r\n\r\n  const { ingredientsData } = useAppSelector(state => state.feedIngredients);\r\n  let zIndex = 7;\r\n\r\n  /*Создать массив из ингредиентов в заказе. Из-за ошибки с данными на сервере это промежуточный вариант,тк попадают undefined ингредиенты.\r\n  Этот промежуточный массив  можно будет заменить на fullDataOrderIngredient после исправления*/\r\n  const fullDataOrderIngredientPreliminary = orderData.ingredients.map((id: string) => {\r\n    return  ingredientsData.find(ingredient => ingredient._id === id)\r\n  });\r\n\r\n  //Создать массив из ингредиентов в заказе из промежуточного, исключая undefined.\r\n  const fullDataOrderIngredient = fullDataOrderIngredientPreliminary.filter((el: IIngredient) => el !== undefined);\r\n  //Рассчитать стоимость заказа.\r\n  let price = 0;\r\n  for(let ingredient of fullDataOrderIngredient) {\r\n    ingredient.type === 'bun' ? price += ingredient.price * 2 : price += ingredient.price\r\n  }\r\n\r\n\r\n  //Добавить картинку ингредиента в карточку заказа.\r\n  const createImage = (ingredient: IIngredient, count: number) => {\r\n    zIndex--;\r\n    return (\r\n      <li key={uuidv4()} className={`${stylesOrderFeed['orderFeed__image-list-elem']}`} style={{ zIndex: zIndex }}>\r\n        <img src={ingredient.image} alt={ingredient.name} className={`${stylesOrderFeed['orderFeed__image']}`} />\r\n        {count !== 0 && <span className={`${stylesOrderFeed['orderFeed__count']} text text_type_main-default`}>+{count}</span>}\r\n      </li>\r\n    )\r\n  }\r\n\r\n  //Рендер картинок ингредиентов карточки заказа.\r\n  const renderImagesIngredients = (fullDataOrderIngredient: IIngredient[]) => {\r\n    const arr = [];\r\n    for (let ind = 0; ind <= fullDataOrderIngredient.length - 1; ind++) {\r\n      if (ind === 5) {\r\n        arr.push(createImage(fullDataOrderIngredient[ind], fullDataOrderIngredient.length - 5));\r\n        return arr\r\n      }\r\n      else {\r\n        arr.push(createImage(fullDataOrderIngredient[ind], 0));\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  if (ingredientsData && fullDataOrderIngredient) {\r\n    return (\r\n      <>\r\n        <div className={`${stylesOrderFeed['orderFeed__number-date-container']} text text_type_digits-default mb-6`}>\r\n          <p className={`${stylesOrderFeed['orderFeed__text']} text text_type_digits-default`}>{`#${orderData.number}`}</p>\r\n          <p className={`${stylesOrderFeed['orderFeed__text']} text text_type_main-default text_color_inactive`}>{convertDate(orderData.createdAt)}</p>\r\n        </div>\r\n        <h2 className={`${stylesOrderFeed['orderFeed__text']} text text_type_main-medium`}>{orderData.name}</h2>\r\n        <div className={`${stylesOrderFeed['orderFeed__bottom']} mt-6`}>\r\n          <ul className={`${stylesOrderFeed['orderFeed__image-list']}`}>\r\n            {renderImagesIngredients(fullDataOrderIngredient)}\r\n          </ul>\r\n          <div className={`${stylesOrderFeed['orderFeed__price-container']}`}>\r\n            <p className={`${stylesOrderFeed['orderFeed__price']} text text_type_main-medium`}>{price}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  return <Preloader />\r\n}\r\n","import OrderFeed from \"components/OrderFeed/OrderFeed\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { addCurrentOrderDetails } from \"services/actions/orderDetails\";\r\nimport { IAllOrdersData, IFeedOrder } from \"services/types/data\";\r\nimport { useAppDispatch } from \"services/types/hooks\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport stylesOrdersList from \"./OrdersList.module.css\";\r\n\r\n\r\nfunction OrdersList({ allOrders }: IAllOrdersData) {\r\n  const location = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  const path = location.pathname === '/feed' ? '/feed' : '/profile/orders';\r\n\r\n  //Открыть модальное окно с деталями заказа.\r\n  const handleOpenOrderDetails = (orderData: IFeedOrder) => {\r\n    dispatch(addCurrentOrderDetails(orderData));\r\n  }\r\n\r\n  //Рендер карточек заказов.\r\n  const renderAllOrders = (orderData: IFeedOrder) => (\r\n    <li key={uuidv4()} onClick={() => handleOpenOrderDetails(orderData)} className={`${stylesOrdersList['ordersList__order-list']}`}>\r\n      <Link className={`${stylesOrdersList['ordersList__link']}`} to={{\r\n        pathname: `${path}/${orderData._id}`,\r\n        state: { background: location }\r\n      }}>\r\n        <OrderFeed orderData={orderData} />\r\n      </Link>\r\n    </li>\r\n  )\r\n\r\n  return (\r\n    <ul className={`${stylesOrdersList['ordersList__orders-container']}`}>\r\n      {allOrders.map(renderAllOrders)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default OrdersList\r\n","import { useEffect, useMemo } from \"react\";\nimport { wsConnectionStart, wsConnectionStartClosed } from \"services/actions/wsActions\";\nimport { useAppDispatch, useAppSelector } from \"services/types/hooks\";\nimport Preloader from \"components/Preloader/Preloader\";\nimport { IFeedOrder } from \"services/types/data\";\nimport Modal from \"components/Modal/Modal\";\nimport { removeCurrentOrderDetails } from \"services/actions/orderDetails\";\nimport { useHistory } from \"react-router-dom\";\nimport OrderDescription from \"components/OrderDescription/OrderDescription\";\nimport OrdersList from \"components/OrdersList/OrdersList\";\nimport stylesFeed from \"./Feed.module.css\";\n\nfunction Feed() {\n\n  const dispatch = useAppDispatch();\n  const { orders, wsConnected, total, totalToday, error } = useAppSelector(state => state.wsReducer);\n  const { currentOrderDetails } = useAppSelector(state => state.orderDetails);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(wsConnectionStart());\n    return () => { dispatch(wsConnectionStartClosed()) }\n  }, [dispatch])\n\n\n  const allOrdersDoneStatus = useMemo(() => { return orders.filter((order: IFeedOrder) => order.status === 'done') }, [orders]).slice(0, 10);\n  const allOrdersPensingStatus = useMemo(() => { return orders.filter((order: IFeedOrder) => order.status === 'pending') }, [orders]).slice(0, 10);\n\n  //Закрыть модальное окно.\n  const handleCloseOrderDetails = () => {\n    dispatch(removeCurrentOrderDetails());\n    history.replace('/feed');\n  }\n\n  if (wsConnected && !error) {\n    return (\n      <section className={`${stylesFeed['feed']} mt-10`}>\n        <div className={`${stylesFeed['feed__container']} mr-15`}>\n          <h1 className=\"text text_type_main-large mb-5\">Лента заказов</h1>\n          <OrdersList allOrders={orders} />\n        </div>\n        <div>\n          <div className={`${stylesFeed['feed__status-container']} mb-15`}>\n            <div className={`${stylesFeed['feed__done-container']}`}>\n              <h2 className=\"text text_type_main-medium mt-15 mb-6\">Готовы:</h2>\n              <ul className={`${stylesFeed['feed__numbers-list']}`}>\n                {allOrdersDoneStatus.map((order: IFeedOrder) => (\n                  <li key={order._id} className={`${stylesFeed['feed__numbers-done']} text text_type_digits-default`}>{order.number}</li>\n                ))}\n              </ul>\n            </div>\n            <div className={`${stylesFeed['feed__done-container']}`}>\n              <h2 className=\"text text_type_main-medium mt-15 mb-6\">В работе:</h2>\n              <ul className={`${stylesFeed['feed__numbers-list']}`}>\n                {allOrdersPensingStatus.map((order: IFeedOrder) => (\n                  <li key={order._id} className={`text text_type_digits-default mb-2`}>{order.number}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <h2 className=\"text text_type_main-medium\">Выполнено за все время:</h2>\n          <p className={`${stylesFeed['feed__total-digits']} text text_type_digits-medium mb-15`}>{total}</p>\n          <h2 className=\"text text_type_main-medium\">Выполнено за сегодня:</h2>\n          <p className={`${stylesFeed['feed__total-digits']} text text_type_digits-medium`}>{totalToday}</p>\n        </div>\n        {currentOrderDetails && (\n          <Modal handleCloseModal={handleCloseOrderDetails}>\n            <OrderDescription orderData={currentOrderDetails} />\n          </Modal>\n        )}\n      </section>\n    )\n  }\n  else if (error) {\n    return (<p className={`${stylesFeed.main__error} text text_type_main-default`}>Произошла ошибка соединения с сервером.</p>)\n  }\n  else {\n    return <Preloader />\n  }\n\n}\n\nexport default Feed\n","import OrderDescription from \"components/OrderDescription/OrderDescription\"\r\nimport Preloader from \"components/Preloader/Preloader\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { wsConnectionStart, wsConnectionStartClosed, wsConnectionStartWithAuth } from \"services/actions/wsActions\";\r\nimport { IFeedOrder } from \"services/types/data\";\r\nimport { useAppDispatch, useAppSelector } from \"services/types/hooks\";\r\nimport styles from \"./OrderDescriptionPage.module.css\";\r\n\r\n\r\nfunction OrderDescriptionPage() {\r\n\r\n  interface IUseParams {\r\n    id: string\r\n  }\r\n  const dispatch = useAppDispatch();\r\n  const { id } = useParams<IUseParams>();\r\n  const { orders, error } = useAppSelector(state => state.wsReducer);\r\n  const { location } = useHistory();\r\n\r\n  //Путь с какой страницы параметры заказа для получения от сервера соответствующего списка.\r\n  const path = location.pathname.split('/')[1];\r\n  //Id заказа из защищенной страницы.\r\n  const idFromProtectedPage = location.pathname.split('/').pop();\r\n\r\n  useEffect(() => {\r\n    path === 'profile' ? dispatch(wsConnectionStartWithAuth()) : dispatch(wsConnectionStart());\r\n    return () => { dispatch(wsConnectionStartClosed()) }\r\n  }, [dispatch, path])\r\n\r\n  //Поиск необходимого заказа.\r\n  const currentOrderData = orders &&\r\n    id === undefined ? orders.find((el: IFeedOrder) => el._id === idFromProtectedPage) : orders.find((el: IFeedOrder) => el._id === id);\r\n\r\n  if (currentOrderData) {\r\n    return (\r\n      <div className={`${styles['order__main-container']}`}>\r\n        <OrderDescription orderData={currentOrderData} />\r\n      </div>\r\n    )\r\n  }\r\n  else if (error) {\r\n    return (<p className={`${styles.order__error} text text_type_main-default`}>Произошла ошибка соединения с сервером.</p>)\r\n  }\r\n  else {\r\n    return <Preloader />\r\n  }\r\n\r\n}\r\n\r\nexport default OrderDescriptionPage\r\n","import Modal from \"components/Modal/Modal\";\r\nimport OrderDescription from \"components/OrderDescription/OrderDescription\";\r\nimport OrdersList from \"components/OrdersList/OrdersList\";\r\nimport Preloader from \"components/Preloader/Preloader\";\r\nimport ProfileNav from \"components/ProfileNav/ProfileNav\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { removeCurrentOrderDetails } from \"services/actions/orderDetails\";\r\nimport { wsConnectionStartClosed, wsConnectionStartWithAuth } from \"services/actions/wsActions\";\r\nimport { useAppDispatch, useAppSelector } from \"services/types/hooks\";\r\nimport Styles from './ProfileOrders.module.css';\r\n\r\n\r\nfunction ProfileOrders() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { orders, wsConnected, error } = useAppSelector(state => state.wsReducer);\r\n  const { currentOrderDetails } = useAppSelector(state => state.orderDetails);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(wsConnectionStartWithAuth());\r\n    return () => { dispatch(wsConnectionStartClosed()) }\r\n  }, [dispatch])\r\n\r\n    //Закрыть модальное окно.\r\n    const handleCloseOrderDetails = () => {\r\n      dispatch(removeCurrentOrderDetails());\r\n      history.replace('/profile/orders');\r\n    }\r\n\r\n  if (wsConnected && !error && orders) {\r\n    return (\r\n      <section className={`${Styles.profile}`}>\r\n        <div className={`${Styles['profile__nav-container']}`}>\r\n          <ProfileNav />\r\n        </div>\r\n        <OrdersList allOrders={orders.slice().reverse()} />\r\n        {currentOrderDetails && (\r\n          <Modal handleCloseModal={handleCloseOrderDetails}>\r\n            <OrderDescription orderData={currentOrderDetails} />\r\n          </Modal>\r\n        )}\r\n      </section>\r\n    )\r\n  }\r\n  else if (error) {\r\n    return (<p className={`${Styles['profile__main-error']} text text_type_main-default`}>Произошла ошибка соединения с сервером.</p>)\r\n  }\r\n  else {\r\n    return <Preloader />\r\n  }\r\n\r\n}\r\n\r\nexport default ProfileOrders;\r\n","import { useEffect } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport Login from '../../pages/Login/Login';\r\nimport Register from '../../pages/Register/Register';\r\nimport ForgotPassword from 'pages/ForgotPassword/ForgotPassword';\r\nimport ResetPassword from 'pages/ResetPassword/ResetPassword';\r\nimport AppHeader from 'components/Header/Header';\r\nimport Profile from 'pages/Profile/Profile';\r\nimport BurgerIngredients from 'components/BurgerIngredients/BurgerIngredients';\r\nimport BurgerConstructor from 'components/BurgerConstructor/BurgerConstructor';\r\nimport NotFound404 from 'pages/NotFound404/NotFound404';\r\nimport { getIngredients } from 'services/actions/burgerIngredients';\r\nimport { useAppSelector, useAppDispatch } from 'services/types/hooks';\r\nimport ProtectedRoute from 'components/ProtectedRoute/ProtectedRoute';\r\nimport IngredientDetailsPage from 'pages/IngredientDetailsPage/IngredientDetailsPage';\r\nimport { getUserDataAction } from 'services/actions/userAuth';\r\nimport Feed from 'pages/Feed/Feed';\r\nimport OrderDescriptionPage from 'pages/OrderDescriptionPage/OrderDescriptionPage';\r\nimport ProfileOrders from 'components/ProfileOrders/ProfileOrders';\r\nimport AppStyles from './App.module.css';\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation<any>();\r\n  const history = useHistory();\r\n\r\n  const historyAction = history.action === 'PUSH';\r\n  const { errorMessage, isLoading } = useAppSelector(state => state.feedIngredients);\r\n  const background = historyAction && location.state && location.state.background;\r\n\r\n  //Получить список ингредиентов от сервера.\r\n  useEffect(() => {\r\n    dispatch(getIngredients());\r\n    dispatch(getUserDataAction());\r\n  }, [dispatch]);\r\n\r\n\r\n  if (errorMessage) {\r\n    return (<p className={`${AppStyles.main__error} text text_type_main-default`}>Произошла ошибка: {errorMessage}</p>)\r\n  }\r\n  else if (isLoading) {\r\n    return (<p className={`${AppStyles.main__error} text text_type_main-default`}>Загрузка...</p>)\r\n  }\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <main className={`${AppStyles.main} pr-5 pl-5`}>\r\n        <Switch location={background || location}>\r\n          <Route path='/' exact={true}>\r\n            <>\r\n              <DndProvider backend={HTML5Backend}>\r\n                <BurgerIngredients />\r\n                <BurgerConstructor />\r\n              </DndProvider>\r\n            </>\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register />\r\n          </Route>\r\n          <Route path='/forgot-password'>\r\n            <ForgotPassword />\r\n          </Route>\r\n          <Route path='/reset-password'>\r\n            <ResetPassword />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <Login />\r\n          </Route>\r\n          <Route path='/feed' exact>\r\n            <Feed />\r\n          </Route>\r\n          <ProtectedRoute path='/profile' redirectPath='/login' exact={true}>\r\n            <Profile />\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path='/profile/orders' redirectPath='/login' exact={true}>\r\n            <ProfileOrders />\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path='/profile/orders/:id' redirectPath='/login' exact={true}>\r\n            <OrderDescriptionPage />\r\n          </ProtectedRoute>\r\n          <Route path='/ingredients/:id' exact>\r\n            <IngredientDetailsPage />\r\n          </Route>\r\n          <Route path='/feed/:id' exact>\r\n            <OrderDescriptionPage />\r\n          </Route>\r\n          <Route>\r\n            <NotFound404 />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import {\r\n  GET_FEED_REQUEST,\r\n  GET_FEED_SUCCESS,\r\n  GET_FEED_FAILED\r\n} from 'services/constants/burgerIngredients';\r\nimport { IIngredient } from '../types/data';\r\nimport { TBurgerIngredientsActions } from '../actions/burgerIngredients';\r\n\r\nexport type TIngredientsInitialState = {\r\n  isLoading: boolean;\r\n  errorMessage: null | string;\r\n  ingredientsData: ReadonlyArray<IIngredient>;\r\n}\r\n\r\nexport const ingredientsInitialState: TIngredientsInitialState = {\r\n  isLoading: false,\r\n  errorMessage: null,\r\n  ingredientsData: [],\r\n}\r\n\r\n//Редьюсер получения ингредиентов от сервера.\r\nexport const feedIngredients = (state = ingredientsInitialState, action: TBurgerIngredientsActions): TIngredientsInitialState => {\r\n  switch (action.type) {\r\n    case GET_FEED_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    }\r\n    case GET_FEED_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredientsData: action.feed,\r\n        isLoading: false\r\n      };\r\n    }\r\n    case GET_FEED_FAILED: {\r\n      return {\r\n        ingredientsData: [],\r\n        errorMessage: action.error,\r\n        isLoading: false\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { ADD_INGREDIENT_DETAILS, REMOVE_INGREDIENT_DETAILS } from 'services/constants/ingredientDetails';\r\nimport { TIngredientDetails } from '../actions/ingredientDetails';\r\nimport { IIngredient } from '../types/data';\r\n\r\ntype TingredientDetailsInitialState = {\r\n  ingredientDetails: null | IIngredient;\r\n}\r\n\r\nconst  ingredientDetailsInitialState: TingredientDetailsInitialState = {\r\n  ingredientDetails: null\r\n}\r\n\r\nexport const ingredientDetails = (state = ingredientDetailsInitialState, action: TIngredientDetails): TingredientDetailsInitialState => {\r\n  switch(action.type) {\r\n    case ADD_INGREDIENT_DETAILS: {\r\n      return {\r\n        ingredientDetails: action.ingredientDetails,\r\n      }\r\n    }\r\n    case REMOVE_INGREDIENT_DETAILS: {\r\n      return {\r\n        ingredientDetails: null,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ADD_INGREDIENT_INSIDE_CONSTRUCTOR,\r\n  REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR,\r\n  TOGGLE_BUN_INSIDE_CONSTRUCTOR,\r\n  CHANGE_INGREDIENT_POSITION,\r\n  CLEAR_CONSTRUCTOR\r\n} from '../constants/burgerConstructor';\r\nimport { TBurgerConstructorActions } from '../actions/burgerConstructor';\r\nimport { IIngredient } from '../types/data';\r\n\r\ntype TBurgerConstructorInitialState = {\r\n  constructorElem: Array<IIngredient>;\r\n}\r\n\r\nconst burgerConstructorInitialState: TBurgerConstructorInitialState = {\r\n  constructorElem: []\r\n};\r\n\r\nexport const burgerConstructor = (state = burgerConstructorInitialState, action: TBurgerConstructorActions): TBurgerConstructorInitialState => {\r\n  switch (action.type) {\r\n    case ADD_INGREDIENT_INSIDE_CONSTRUCTOR: {\r\n      // Если добавляется булка, то она становится первой в массиве, иначе ингредиенты добавляются в конец.\r\n      if (action.ingredient.type === 'bun') {\r\n        return {\r\n          ...state,\r\n          constructorElem: [\r\n            action.ingredient,\r\n            ...state.constructorElem\r\n          ]\r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          ...state,\r\n          constructorElem: [\r\n            ...state.constructorElem,\r\n            action.ingredient\r\n          ]\r\n        }\r\n      }\r\n    }\r\n    case REMOVE_INGREDIENT_INSIDE_CONSTRUCTOR: {\r\n      return {\r\n            ...state,\r\n            constructorElem: [...state.constructorElem].filter((item) => item.uid !== action.uid)\r\n          }\r\n    }\r\n    case CLEAR_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        constructorElem:[]\r\n      }\r\n    }\r\n    case TOGGLE_BUN_INSIDE_CONSTRUCTOR: {\r\n      return {\r\n        ...state,\r\n        constructorElem: [...state.constructorElem].map(item => item.type === 'bun' ? action.ingredient : item)\r\n      }\r\n    }\r\n    case CHANGE_INGREDIENT_POSITION: {\r\n      return {\r\n        ...state,\r\n        constructorElem: [...state.constructorElem].map((item) => {\r\n          if (item.uid === action.dragUid) {\r\n            return [...state.constructorElem].find(\r\n              (item) => item.uid === action.hoverUid\r\n            )!;\r\n          } else if (item.uid === action.hoverUid) {\r\n            return [...state.constructorElem].find(\r\n              (item) => item.uid === action.dragUid\r\n            )!;\r\n          } else return item;\r\n        }),\r\n      };\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { POST_ORDER_SUCCESS, POST_ORDER_FAILED, HANDLE_CLOSE_ORDER_MODAL, POST_ORDER_REQUEST, ADD_CURRENT_ORDER_DETAILS, REMOVE_CURRENT_ORDER_DETAILS } from '../constants/orderDetails';\r\nimport { TOrderDetailsActions } from '../actions/orderDetails';\r\nimport { IFeedOrder } from 'services/types/data';\r\n\r\nexport type TOrderDetails = {\r\n  orderNum: null | number;\r\n  errorMessage: null | string;\r\n  isLoading: boolean;\r\n  currentOrderDetails: null | IFeedOrder;\r\n}\r\n\r\nconst orderDetailsInitialState: TOrderDetails = {\r\n  orderNum: null,\r\n  errorMessage: null,\r\n  isLoading: false,\r\n  currentOrderDetails: null,\r\n}\r\n\r\nexport const orderDetails = (state = orderDetailsInitialState, action: TOrderDetailsActions): TOrderDetails => {\r\n  switch (action.type) {\r\n    case POST_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n    }\r\n    case POST_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderNum: action.orderNum,\r\n        isLoading: false\r\n      }\r\n    }\r\n    case POST_ORDER_FAILED: {\r\n      return {\r\n        ...state,\r\n        orderNum: null,\r\n        errorMessage: `Произошла ошибка: ${action.error}. Обратитесь к администрации.`,\r\n        isLoading: false\r\n      }\r\n    }\r\n    case HANDLE_CLOSE_ORDER_MODAL: {\r\n      return {\r\n        ...state,\r\n        orderNum: null,\r\n        errorMessage: null,\r\n        isLoading: false\r\n      }\r\n    }\r\n    case ADD_CURRENT_ORDER_DETAILS: {\r\n      return {\r\n        ...state,\r\n        currentOrderDetails: action.payload\r\n      }\r\n    }\r\n    case REMOVE_CURRENT_ORDER_DETAILS: {\r\n      return {\r\n        ...state,\r\n        currentOrderDetails: null\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import {\r\n  GET_SERVER_REQUEST,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAILED,\r\n  AUTH_USER_SUCCESS,\r\n  AUTH_USER_FAILED,\r\n  LOGOUT_USER_SUCCESS,\r\n  LOGOUT_USER_FAILED,\r\n  CHANGE_USER_SUCCESS,\r\n  CHANGE_USER_FAILED,\r\n  POST_EMAIL_FORGOT_PAGE_SUCCESS,\r\n  POST_EMAIL_FORGOT_PAGE_FAILED,\r\n  POST_NEW_PASSWORD_SUCCESS,\r\n  POST_NEW_PASSWORD_FAILED,\r\n  GET_SERVER_REQUEST_RESET\r\n} from \"services/constants/userAuth\";\r\nimport { TUserData } from \"services/actions/userAuth\";\r\n\r\nexport interface IUserAuthState {\r\n  user: {\r\n    email: string,\r\n    name: string,\r\n  },\r\n  isAuth: boolean,\r\n  isLoadingAuth: boolean,\r\n  registerErrorMessage: string | null,\r\n  authErrorMessage: string | null,\r\n  logoutErrorMessage: string | null,\r\n  changeUserResultMessage: string | null,\r\n  isEmail: 'pushToResetPage' | 'pushToLoginPage' | '',\r\n  postEmailForgotPageErrorMessage: string | null,\r\n  postNewPasswordError: string | null,\r\n}\r\n\r\n\r\nexport const userAuthState: IUserAuthState = {\r\n  user: {\r\n    email: '',\r\n    name: ''\r\n  },\r\n  isAuth: false,\r\n  isLoadingAuth: false,\r\n  registerErrorMessage: null,\r\n  authErrorMessage: null,\r\n  logoutErrorMessage: null,\r\n  changeUserResultMessage: '',\r\n  isEmail: '',\r\n  postEmailForgotPageErrorMessage: null,\r\n  postNewPasswordError: null,\r\n}\r\n\r\nexport const authUserReducer = (state = userAuthState, action: TUserData): IUserAuthState => {\r\n  switch (action.type) {\r\n    case GET_SERVER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoadingAuth: true,\r\n      }\r\n    }\r\n    case REGISTER_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoadingAuth: false,\r\n        isAuth: true,\r\n      }\r\n    }\r\n    case REGISTER_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        registerErrorMessage: `Произошла ошибка регистрации: ${action.registerErrorMessage}. Обратитесь к администрации.`,\r\n        isLoadingAuth: false,\r\n      }\r\n    }\r\n    case AUTH_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          email: action.email,\r\n          name: action.name\r\n        },\r\n        isLoadingAuth: false,\r\n        isAuth: true,\r\n        authErrorMessage: null,\r\n      }\r\n    }\r\n    case AUTH_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        authErrorMessage: `Произошла ошибка: ${action.authErrorMessage}. Проверьте введенные данные или попробуйте авторизоваться позже.`,\r\n        isLoadingAuth: false,\r\n      }\r\n    }\r\n    case CHANGE_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          email: action.email,\r\n          name: action.name\r\n        },\r\n        isLoadingAuth: false,\r\n        changeUserResultMessage: action.changeUserResultMessage,\r\n      }\r\n    }\r\n    case CHANGE_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        changeUserResultMessage: `Произошла ошибка: ${action.changeUserErrorMessage}. Повторите попытку позже.`,\r\n        isLoadingAuth: false,\r\n      }\r\n    }\r\n    case LOGOUT_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          email: '',\r\n          name: ''\r\n        },\r\n        isLoadingAuth: false,\r\n        isAuth: false,\r\n      }\r\n    }\r\n    case LOGOUT_USER_FAILED: {\r\n      return {\r\n        ...state,\r\n        logoutErrorMessage: `Произошла ошибка: ${action.logoutErrorMessage}.`,\r\n        isLoadingAuth: false,\r\n      }\r\n    }\r\n    case POST_EMAIL_FORGOT_PAGE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isEmail: 'pushToResetPage',\r\n        isLoadingAuth: false\r\n      }\r\n    }\r\n    case POST_EMAIL_FORGOT_PAGE_FAILED: {\r\n      return {\r\n        ...state,\r\n        postEmailForgotPageErrorMessage: action.postEmailForgotPageErrorMessage,\r\n        isLoadingAuth: false\r\n      }\r\n    }\r\n    case POST_NEW_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoadingAuth: false,\r\n        isEmail: 'pushToLoginPage'\r\n      }\r\n    }\r\n    case POST_NEW_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoadingAuth: false,\r\n        postNewPasswordError: action.postNewpasswordErrorMessage,\r\n      }\r\n    }\r\n    case GET_SERVER_REQUEST_RESET: {\r\n      return {\r\n        ...state,\r\n        isLoadingAuth: false,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { TWSActions } from \"services/actions/wsActions\";\r\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_CONNECTION_SUCCESS, WS_GET_MESSAGE } from \"services/constants/wsConstants\";\r\nimport { IFeedOrder } from \"services/types/data\";\r\n\r\n\r\nexport type TWSState = {\r\n  wsConnected: boolean;\r\n  orders: ReadonlyArray<IFeedOrder>;\r\n  total: number | null;\r\n  totalToday: number | null;\r\n\r\n  error?: Event;\r\n}\r\n\r\nconst feedInitialState: TWSState = {\r\n  wsConnected: false,\r\n  orders: [],\r\n  total: null,\r\n  totalToday: null\r\n};\r\n\r\n\r\nexport const wsReducer = (state = feedInitialState, action: TWSActions): TWSState => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        wsConnected: true\r\n      }\r\n    }\r\n    case WS_CONNECTION_ERROR: {\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    case WS_GET_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday\r\n      }\r\n    }\r\n    case WS_CONNECTION_CLOSED: {\r\n      return {\r\n        ...state,\r\n        orders: [],\r\n        wsConnected: false,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { feedIngredients } from './burgerIngredients';\r\nimport { ingredientDetails } from './ingredientDetails';\r\nimport { burgerConstructor } from './burgerConstructor';\r\nimport { orderDetails } from './orderDetails';\r\nimport { authUserReducer } from './userAuth';\r\nimport { wsReducer } from './wsReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  feedIngredients,\r\n  ingredientDetails,\r\n  burgerConstructor,\r\n  orderDetails,\r\n  authUserReducer,\r\n  wsReducer\r\n})\r\n","import { Middleware, MiddlewareAPI } from \"redux\";\r\nimport { AppDispatch, RootState } from \"services/types/hooks\";\r\nimport { getCookie } from \"utils/cookie\";\r\n\r\n  export const socketMiddleware = (wsUrl: string, actionsList: any, authType: string): Middleware => {\r\n  return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => (action: any) => {\r\n      const { dispatch } = store;\r\n      const { type } = action;\r\n      if(authType === 'withoutAuth') {\r\n        if (type === actionsList.wsConnectionStart.type) {\r\n          socket = new WebSocket(wsUrl);\r\n        }\r\n      }\r\n      else if (authType === 'withAuth') {\r\n        if (type === actionsList.wsConnectionStartWithAuth.type) {\r\n          const accessToken = getCookie('accessToken');\r\n          socket = new WebSocket(`${wsUrl}?token=${accessToken}`);\r\n        }\r\n      }\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          if (socket?.readyState === 1) dispatch(actionsList.wsConnectionSuccess());\r\n        };\r\n        socket.onerror = event => {\r\n          dispatch(actionsList.wsConnectionError());\r\n        };\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          dispatch(actionsList.wsGetMessage(JSON.parse(data)));\r\n        };\r\n        socket.onclose = event => {\r\n          dispatch(actionsList.wsConnectionClosed());\r\n        };\r\n\r\n        if (type === actionsList.wsConnectionStartClosed.type) {\r\n          socket.close(1000, 'reason');\r\n        }\r\n      }\r\n      next(action);\r\n    }\r\n  }\r\n  )\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { rootReducer } from 'services/reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { socketMiddleware } from 'services/wsMiddleware/socketMiddleware';\r\nimport { wsUrl } from './constants';\r\nimport { actionListWithAuth, actionListWithoutAuth } from 'services/actions/wsActions';\r\n\r\nconst composeEnhancers =\r\n  ((window as any)[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] as typeof compose) ||\r\n  compose;\r\n\r\n  const enhancer = composeEnhancers(\r\n    applyMiddleware(\r\n      thunk,\r\n      socketMiddleware(`${wsUrl}/all`, actionListWithoutAuth, 'withoutAuth'),\r\n      socketMiddleware(wsUrl, actionListWithAuth, 'withAuth')\r\n    )\r\n  );\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport { store } from 'utils/store';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename=\"react-burger\">\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.querySelector('#root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDscr\":\"OrderDescription_orderDscr__3qqRw\",\"orderDscr__number\":\"OrderDescription_orderDscr__number__3bFbK\",\"orderDscr__status\":\"OrderDescription_orderDscr__status__19hYg\",\"orderDscr__list\":\"OrderDescription_orderDscr__list__bkGKt\",\"orderDscr__image\":\"OrderDescription_orderDscr__image__2EiOE\",\"orderDscr__ingr-heading\":\"OrderDescription_orderDscr__ingr-heading__34LmF\",\"orderDscr__text-container\":\"OrderDescription_orderDscr__text-container__2uKLJ\",\"orderDscr__footer-container\":\"OrderDescription_orderDscr__footer-container__1jkwW\",\"orderDscr__date\":\"OrderDescription_orderDscr__date__2UuJP\",\"orderDscr__flex-container\":\"OrderDescription_orderDscr__flex-container__1RSXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderFeed__number-date-container\":\"OrderFeed_orderFeed__number-date-container__2M2U6\",\"orderFeed__text\":\"OrderFeed_orderFeed__text__1aNry\",\"orderFeed__image-list\":\"OrderFeed_orderFeed__image-list__1KVbq\",\"orderFeed__image-list-elem\":\"OrderFeed_orderFeed__image-list-elem__uCHp5\",\"orderFeed__image-list-last-elem\":\"OrderFeed_orderFeed__image-list-last-elem__3X_u8\",\"orderFeed__image\":\"OrderFeed_orderFeed__image__21tm7\",\"orderFeed__last-image\":\"OrderFeed_orderFeed__last-image__2IIFz\",\"orderFeed__count\":\"OrderFeed_orderFeed__count__pSYLG\",\"orderFeed__price\":\"OrderFeed_orderFeed__price__VgHbp\",\"orderFeed__bottom\":\"OrderFeed_orderFeed__bottom__16wTO\",\"orderFeed__price-container\":\"OrderFeed_orderFeed__price-container__1hTXk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"Feed_feed__nA3DB\",\"feed__numbers-list\":\"Feed_feed__numbers-list__vUtld\",\"feed__done-container\":\"Feed_feed__done-container__3qyiB\",\"feed__total-digits\":\"Feed_feed__total-digits__36BYV\",\"feed__numbers-done\":\"Feed_feed__numbers-done__a23H4\",\"feed__status-container\":\"Feed_feed__status-container__1R-AY\",\"feed__main__error\":\"Feed_feed__main__error__1KAdr\",\"feed__container\":\"Feed_feed__container__3a6vt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__list\":\"ProfileNav_profile__list__3SnvV\",\"profile__list-element\":\"ProfileNav_profile__list-element__5U5H8\",\"profile__link\":\"ProfileNav_profile__link__KZiBV\",\"profile__link_active\":\"ProfileNav_profile__link_active__18czU\",\"profile__exit\":\"ProfileNav_profile__exit__2feI8\",\"profile__text\":\"ProfileNav_profile__text__15kz_\",\"profile__result\":\"ProfileNav_profile__result__3I1iJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor\":\"BurgerConstructor_burger-constructor__2m5BV\",\"burger-constructor__orderList-element\":\"BurgerConstructor_burger-constructor__orderList-element__2RPLH\",\"burger-constructor__bunList\":\"BurgerConstructor_burger-constructor__bunList__2BMQk\",\"burger-constructor__orderList\":\"BurgerConstructor_burger-constructor__orderList__3nV_-\",\"burger-constructor__total-container\":\"BurgerConstructor_burger-constructor__total-container__13pd-\",\"burger-constructor__total-price\":\"BurgerConstructor_burger-constructor__total-price__2BK_N\",\"burger-constructor__total-price-container\":\"BurgerConstructor_burger-constructor__total-price-container__3ETcn\",\"onHover\":\"BurgerConstructor_onHover__sd6lD\",\"burger-constructor__text\":\"BurgerConstructor_burger-constructor__text__26-FX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetailsPage\":\"IngredientDetailsPage_ingredientDetailsPage__2udVw\",\"ingredientDetailsPage__name\":\"IngredientDetailsPage_ingredientDetailsPage__name__3iq_I\",\"ingredientDetailsPage__image\":\"IngredientDetailsPage_ingredientDetailsPage__image__pzlXs\",\"ingredientDetailsPage__list\":\"IngredientDetailsPage_ingredientDetailsPage__list__GCr9E\",\"ingredientDetailsPage__list-elem\":\"IngredientDetailsPage_ingredientDetailsPage__list-elem__dACOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3CEzV\",\"preloader__container\":\"Preloader_preloader__container__11zjP\",\"preloader__elem\":\"Preloader_preloader__elem__29Y9p\",\"preloader__elem_one\":\"Preloader_preloader__elem_one__2EUY_\",\"one\":\"Preloader_one__oCwGo\",\"preloader__elem_two\":\"Preloader_preloader__elem_two__1BsOY\",\"two\":\"Preloader_two__2Wn9q\",\"preloader__elem_three\":\"Preloader_preloader__elem_three__3e9RO\",\"three\":\"Preloader_three__zji2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"IngredientDetails_ingredientDetails__3Lq5p\",\"ingredientDetails__name\":\"IngredientDetails_ingredientDetails__name__3SjGx\",\"ingredientDetails__image\":\"IngredientDetails_ingredientDetails__image__1rOsg\",\"ingredientDetails__list\":\"IngredientDetails_ingredientDetails__list__1sFQJ\",\"ingredientDetails__list-elem\":\"IngredientDetails_ingredientDetails__list-elem__1aWYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3F9t0\",\"profile__form\":\"Profile_profile__form__3M7ZY\",\"form\":\"Profile_form__1UirM\",\"profile__buttons-container\":\"Profile_profile__buttons-container__1CK0Z\",\"profile__cansel\":\"Profile_profile__cansel__1-OPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredients\":\"BurgerIngredients_burger-ingredients__1WQ1r\",\"burger-ingredients__ingridients-list\":\"BurgerIngredients_burger-ingredients__ingridients-list__1cOp1\",\"burger-ingredients__list-elem\":\"BurgerIngredients_burger-ingredients__list-elem__1RAFW\",\"burger-ingredients__container\":\"BurgerIngredients_burger-ingredients__container__zSnF5\",\"burger-ingredients__link\":\"BurgerIngredients_burger-ingredients__link__1rmhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"OrderDetails_orderDetails__2c8hI\",\"orderDetails__text\":\"OrderDetails_orderDetails__text__SZayw\",\"orderDetails__image\":\"OrderDetails_orderDetails__image__25gXE\",\"orderDetails__heading\":\"OrderDetails_orderDetails__heading__2OfP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1ejYH\",\"login__form\":\"Login_login__form__nUAP_\",\"login__heading\":\"Login_login__heading__2WgAZ\",\"login__link\":\"Login_login__link__3X4K3\",\"login__error\":\"Login_login__error__2hUpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__Hf2Cq\",\"register__form\":\"Register_register__form__3ncMi\",\"register__heading\":\"Register_register__heading__3Gyqm\",\"register__link\":\"Register_register__link__2mCmf\",\"register__error\":\"Register_register__error__3e1NI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot-password\":\"ForgotPassword_forgot-password__1mogA\",\"forgot-password__form\":\"ForgotPassword_forgot-password__form__3-wL8\",\"forgot-password__heading\":\"ForgotPassword_forgot-password__heading__UqgIu\",\"forgot-password__link\":\"ForgotPassword_forgot-password__link__1NgC-\",\"forgot-password__error\":\"ForgotPassword_forgot-password__error__2SGTo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset-password\":\"ResetPassword_reset-password__2tyTB\",\"reset-password__form\":\"ResetPassword_reset-password__form__2On9K\",\"reset-password__heading\":\"ResetPassword_reset-password__heading__3lLWK\",\"reset-password__link\":\"ResetPassword_reset-password__link__18dYU\",\"reset-password__error\":\"ResetPassword_reset-password__error__3cL67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound404_notFound__Tp7Db\",\"notFound__link\":\"NotFound404_notFound__link__3Bxkb\",\"notFound__text\":\"NotFound404_notFound__text__1FeIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3p4ME\",\"modal_open\":\"Modal_modal_open__3yVi2\",\"modal__content\":\"Modal_modal__content__bOvRS\",\"modal__button-close\":\"Modal_modal__button-close__3YlC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersList__orders-container\":\"OrdersList_ordersList__orders-container__3UPMG\",\"ordersList__link\":\"OrdersList_ordersList__link__3ji5W\",\"ordersList__order-list\":\"OrdersList_ordersList__order-list__32Pne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileOrders_profile__kbqQl\",\"profile__nav-container\":\"ProfileOrders_profile__nav-container__UlY-o\",\"profile__main-error\":\"ProfileOrders_profile__main-error__BeNnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__2saeG\",\"main__error\":\"App_main__error__2gjJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"Ingredient_ingredient__18sFS\",\"ingredient__price-container\":\"Ingredient_ingredient__price-container__2jQpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order__main-container\":\"OrderDescriptionPage_order__main-container__JwgII\",\"order__error\":\"OrderDescriptionPage_order__error__11zzG\"};"],"sourceRoot":""}